apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.3
  labels:
    app.kubernetes.io/component: telemetry
    app.kubernetes.io/instance: telemetry-controller-manager
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: telemetry-controller-manager
    app.kubernetes.io/part-of: telemetry
  name: logpipelines.telemetry.kyma-project.io
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: webhook-service
          namespace: kyma-system
          path: /convert
      conversionReviewVersions:
      - v1
  group: telemetry.kyma-project.io
  names:
    kind: LogPipeline
    listKind: LogPipelineList
    plural: logpipelines
    singular: logpipeline
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[-1].type
      name: Status
      type: string
    - jsonPath: .status.unsupportedMode
      name: Unsupported-Mode
      type: boolean
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: LogPipeline is the Schema for the logpipelines API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Defines the desired state of LogPipeline
            properties:
              files:
                items:
                  description: Provides file content to be consumed by a LogPipeline
                    configuration
                  properties:
                    content:
                      type: string
                    name:
                      type: string
                  type: object
                type: array
              filters:
                items:
                  description: Describes a filtering option on the logs of the pipeline.
                  properties:
                    custom:
                      description: 'Custom filter definition in the Fluent Bit syntax.
                        Note: If you use a `custom` filter, you put the LogPipeline
                        in unsupported mode.'
                      type: string
                  type: object
                type: array
              input:
                description: Defines where to collect logs, including selector mechanisms.
                properties:
                  application:
                    description: Configures in more detail from which containers application
                      logs are enabled as input.
                    properties:
                      containers:
                        description: Describes whether application logs from specific
                          containers are selected. The options are mutually exclusive.
                        properties:
                          exclude:
                            description: Specifies to exclude only the container logs
                              with the specified container names.
                            items:
                              type: string
                            type: array
                          include:
                            description: Specifies to include only the container logs
                              with the specified container names.
                            items:
                              type: string
                            type: array
                        type: object
                      dropLabels:
                        description: Defines whether to drop all Kubernetes labels.
                          The default is `false`.
                        type: boolean
                      keepAnnotations:
                        description: Defines whether to keep all Kubernetes annotations.
                          The default is `false`.
                        type: boolean
                      namespaces:
                        description: Describes whether application logs from specific
                          Namespaces are selected. The options are mutually exclusive.
                          System Namespaces are excluded by default from the collection.
                        properties:
                          exclude:
                            description: Exclude the container logs of the specified
                              Namespace names.
                            items:
                              type: string
                            type: array
                          include:
                            description: Include only the container logs of the specified
                              Namespace names.
                            items:
                              type: string
                            type: array
                          system:
                            description: Set to `true` if collecting from all Namespaces
                              must also include the system Namespaces like kube-system,
                              istio-system, and kyma-system.
                            type: boolean
                        type: object
                    type: object
                type: object
              output:
                description: '[Fluent Bit output](https://docs.fluentbit.io/manual/pipeline/outputs)
                  where you want to push the logs. Only one output can be specified.'
                properties:
                  custom:
                    description: 'Defines a custom output in the Fluent Bit syntax.
                      Note: If you use a `custom` output, you put the LogPipeline
                      in unsupported mode.'
                    type: string
                  grafana-loki:
                    description: Configures an output to the Kyma-internal Loki instance.
                      [Fluent Bit grafana-loki output](https://grafana.com/docs/loki/v2.2.x/clients/fluentbit/).
                      **Note:** This output is considered legacy and is only provided
                      for backward compatibility with the [deprecated](https://kyma-project.io/blog/2022/11/2/loki-deprecation/)
                      in-cluster Loki instance. It might not be compatible with the
                      latest Loki versions. For integration with a custom Loki installation
                      use the `custom` output with the name `loki` instead, see also
                      [Installing a custom Loki stack in Kyma](https://github.com/kyma-project/examples/tree/main/loki).
                    properties:
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels to set for each log record.
                        type: object
                      removeKeys:
                        description: Attributes to be removed from a log record.
                        items:
                          type: string
                        type: array
                      url:
                        description: Grafana Loki URL.
                        properties:
                          value:
                            description: Value that can contain references to Secret
                              values.
                            type: string
                          valueFrom:
                            properties:
                              secretKeyRef:
                                description: Refers to a key in a Secret. You must
                                  provide `name` and `namespace` of the Secret, as
                                  well as the name of the `key`.
                                properties:
                                  key:
                                    type: string
                                  name:
                                    type: string
                                  namespace:
                                    type: string
                                type: object
                            type: object
                        type: object
                    type: object
                  http:
                    description: Configures an HTTP-based output compatible with the
                      Fluent Bit HTTP output plugin.
                    properties:
                      compress:
                        description: Defines the compression algorithm to use.
                        type: string
                      dedot:
                        description: Enables de-dotting of Kubernetes labels and annotations
                          for compatibility with ElasticSearch based backends. Dots
                          (.) will be replaced by underscores (_). Default is `false`.
                        type: boolean
                      format:
                        description: Data format to be used in the HTTP request body.
                          Default is `json`.
                        type: string
                      host:
                        description: Defines the host of the HTTP receiver.
                        properties:
                          value:
                            description: Value that can contain references to Secret
                              values.
                            type: string
                          valueFrom:
                            properties:
                              secretKeyRef:
                                description: Refers to a key in a Secret. You must
                                  provide `name` and `namespace` of the Secret, as
                                  well as the name of the `key`.
                                properties:
                                  key:
                                    type: string
                                  name:
                                    type: string
                                  namespace:
                                    type: string
                                type: object
                            type: object
                        type: object
                      password:
                        description: Defines the basic auth password.
                        properties:
                          value:
                            description: Value that can contain references to Secret
                              values.
                            type: string
                          valueFrom:
                            properties:
                              secretKeyRef:
                                description: Refers to a key in a Secret. You must
                                  provide `name` and `namespace` of the Secret, as
                                  well as the name of the `key`.
                                properties:
                                  key:
                                    type: string
                                  name:
                                    type: string
                                  namespace:
                                    type: string
                                type: object
                            type: object
                        type: object
                      port:
                        description: Defines the port of the HTTP receiver. Default
                          is 443.
                        type: string
                      tls:
                        description: Configures TLS for the HTTP target server.
                        properties:
                          disabled:
                            description: Indicates if TLS is disabled or enabled.
                              Default is `false`.
                            type: boolean
                          skipCertificateValidation:
                            description: If `true`, the validation of certificates
                              is skipped. Default is `false`.
                            type: boolean
                        type: object
                      uri:
                        description: Defines the URI of the HTTP receiver. Default
                          is "/".
                        type: string
                      user:
                        description: Defines the basic auth user.
                        properties:
                          value:
                            description: Value that can contain references to Secret
                              values.
                            type: string
                          valueFrom:
                            properties:
                              secretKeyRef:
                                description: Refers to a key in a Secret. You must
                                  provide `name` and `namespace` of the Secret, as
                                  well as the name of the `key`.
                                properties:
                                  key:
                                    type: string
                                  name:
                                    type: string
                                  namespace:
                                    type: string
                                type: object
                            type: object
                        type: object
                    type: object
                type: object
              variables:
                description: A list of mappings from Kubernetes Secret keys to environment
                  variables. Mapped keys are mounted as environment variables, so
                  that they are available as [Variables](https://docs.fluentbit.io/manual/administration/configuring-fluent-bit/classic-mode/variables)
                  in the sections.
                items:
                  description: References a Kubernetes secret that should be provided
                    as environment variable to Fluent Bit
                  properties:
                    name:
                      description: Name of the variable to map.
                      type: string
                    valueFrom:
                      properties:
                        secretKeyRef:
                          description: Refers to a key in a Secret. You must provide
                            `name` and `namespace` of the Secret, as well as the name
                            of the `key`.
                          properties:
                            key:
                              type: string
                            name:
                              type: string
                            namespace:
                              type: string
                          type: object
                      type: object
                  type: object
                type: array
            type: object
          status:
            description: Shows the observed state of the LogPipeline
            properties:
              conditions:
                description: An array of conditions describing the status of the pipeline.
                items:
                  description: LogPipelineCondition contains details for the current
                    condition of this LogPipeline
                  properties:
                    lastTransitionTime:
                      description: An array of conditions describing the status of
                        the pipeline.
                      format: date-time
                      type: string
                    reason:
                      description: An array of conditions describing the status of
                        the pipeline.
                      type: string
                    type:
                      description: 'The possible transition types are:<br>- `Running`:
                        The instance is ready and usable.<br>- `Pending`: The pipeline
                        is being activated.'
                      type: string
                  type: object
                type: array
              unsupportedMode:
                description: Is active when the LogPipeline uses a `custom` output
                  or filter; see [unsupported mode](./../../01-overview/main-areas/telemetry/telemetry-02-logs.md#unsupported-mode#unsupported-mode).
                type: boolean
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.3
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: telemetry
    app.kubernetes.io/instance: telemetry-controller-manager
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: telemetry-controller-manager
    app.kubernetes.io/part-of: telemetry
  name: logparsers.telemetry.kyma-project.io
spec:
  group: telemetry.kyma-project.io
  names:
    kind: LogParser
    listKind: LogParserList
    plural: logparsers
    singular: logparser
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[-1].type
      name: Status
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: LogParser is the Schema for the logparsers API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Defines the desired state of LogParser.
            properties:
              parser:
                description: '[Fluent Bit Parsers](https://docs.fluentbit.io/manual/pipeline/parsers).
                  The parser specified here has no effect until it is referenced by
                  a [Pod annotation](https://docs.fluentbit.io/manual/pipeline/filters/kubernetes#kubernetes-annotations)
                  on your workload or by a [Parser Filter](https://docs.fluentbit.io/manual/pipeline/filters/parser)
                  defined in a pipeline''s filters section.'
                type: string
            type: object
          status:
            description: Shows the observed state of the LogParser.
            properties:
              conditions:
                description: An array of conditions describing the status of the parser.
                items:
                  properties:
                    lastTransitionTime:
                      description: An array of conditions describing the status of
                        the parser.
                      format: date-time
                      type: string
                    reason:
                      description: An array of conditions describing the status of
                        the parser.
                      type: string
                    type:
                      description: 'The possible transition types are:<br>- `Running`:
                        The parser is ready and usable.<br>- `Pending`: The parser
                        is being activated.'
                      type: string
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.3
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: telemetry
    app.kubernetes.io/instance: telemetry-controller-manager
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: telemetry-controller-manager
    app.kubernetes.io/part-of: telemetry
  name: tracepipelines.telemetry.kyma-project.io
spec:
  group: telemetry.kyma-project.io
  names:
    kind: TracePipeline
    listKind: TracePipelineList
    plural: tracepipelines
    singular: tracepipeline
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[-1].type
      name: Status
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: TracePipeline is the Schema for the tracepipelines API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Defines the desired state of TracePipeline
            properties:
              output:
                description: Defines a destination for shipping trace data. Only one
                  can be defined per pipeline.
                properties:
                  otlp:
                    description: Configures the underlying Otel Collector with an
                      [OTLP exporter](https://github.com/open-telemetry/opentelemetry-collector/blob/main/exporter/otlpexporter/README.md).
                      If you switch `protocol`to `http`, an [OTLP HTTP exporter](https://github.com/open-telemetry/opentelemetry-collector/tree/main/exporter/otlphttpexporter)
                      is used.
                    properties:
                      authentication:
                        description: Defines authentication options for the OTLP output
                        properties:
                          basic:
                            description: Activates `Basic` authentication for the
                              destination providing relevant Secrets.
                            properties:
                              password:
                                description: Contains the basic auth password or a
                                  Secret reference.
                                properties:
                                  value:
                                    description: Value that can contain references
                                      to Secret values.
                                    type: string
                                  valueFrom:
                                    properties:
                                      secretKeyRef:
                                        description: Refers to a key in a Secret.
                                          You must provide `name` and `namespace`
                                          of the Secret, as well as the name of the
                                          `key`.
                                        properties:
                                          key:
                                            type: string
                                          name:
                                            type: string
                                          namespace:
                                            type: string
                                        type: object
                                    type: object
                                type: object
                              user:
                                description: Contains the basic auth username or a
                                  Secret reference.
                                properties:
                                  value:
                                    description: Value that can contain references
                                      to Secret values.
                                    type: string
                                  valueFrom:
                                    properties:
                                      secretKeyRef:
                                        description: Refers to a key in a Secret.
                                          You must provide `name` and `namespace`
                                          of the Secret, as well as the name of the
                                          `key`.
                                        properties:
                                          key:
                                            type: string
                                          name:
                                            type: string
                                          namespace:
                                            type: string
                                        type: object
                                    type: object
                                type: object
                            required:
                            - password
                            - user
                            type: object
                        type: object
                      endpoint:
                        description: Defines the host and port (<host>:<port>) of
                          an OTLP endpoint.
                        properties:
                          value:
                            description: Value that can contain references to Secret
                              values.
                            type: string
                          valueFrom:
                            properties:
                              secretKeyRef:
                                description: Refers to a key in a Secret. You must
                                  provide `name` and `namespace` of the Secret, as
                                  well as the name of the `key`.
                                properties:
                                  key:
                                    type: string
                                  name:
                                    type: string
                                  namespace:
                                    type: string
                                type: object
                            type: object
                        type: object
                      headers:
                        description: Defines custom headers to be added to outgoing
                          HTTP or GRPC requests.
                        items:
                          properties:
                            name:
                              description: Defines the header name.
                              type: string
                            value:
                              description: Value that can contain references to Secret
                                values.
                              type: string
                            valueFrom:
                              properties:
                                secretKeyRef:
                                  description: Refers to a key in a Secret. You must
                                    provide `name` and `namespace` of the Secret,
                                    as well as the name of the `key`.
                                  properties:
                                    key:
                                      type: string
                                    name:
                                      type: string
                                    namespace:
                                      type: string
                                  type: object
                              type: object
                          required:
                          - name
                          type: object
                        type: array
                      protocol:
                        default: grpc
                        description: Defines the OTLP protocol (http or grpc). Default
                          is GRPC.
                        enum:
                        - grpc
                        - http
                        minLength: 1
                        type: string
                    required:
                    - endpoint
                    type: object
                required:
                - otlp
                type: object
            required:
            - output
            type: object
          status:
            description: Shows the observed state of the TracePipeline
            properties:
              conditions:
                items:
                  description: An array of conditions describing the status of the
                    pipeline.
                  properties:
                    lastTransitionTime:
                      description: An array of conditions describing the status of
                        the pipeline.
                      format: date-time
                      type: string
                    reason:
                      description: An array of conditions describing the status of
                        the pipeline.
                      type: string
                    type:
                      description: 'The possible transition types are:<br>- `Running`:
                        The instance is ready and usable.<br>- `Pending`: The pipeline
                        is being activated.'
                      type: string
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.3
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: telemetry
    app.kubernetes.io/instance: telemetry-controller-manager
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: telemetry-controller-manager
    app.kubernetes.io/part-of: telemetry
  name: metricpipelines.telemetry.kyma-project.io
spec:
  group: telemetry.kyma-project.io
  names:
    kind: MetricPipeline
    listKind: MetricPipelineList
    plural: metricpipelines
    singular: metricpipeline
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[-1].type
      name: Status
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: MetricPipeline is the Schema for the metricpipelines API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: MetricPipelineSpec defines the desired state of MetricPipeline
            properties:
              output:
                description: Configures the trace receiver of a MetricPipeline.
                properties:
                  otlp:
                    description: Defines an output using the OpenTelmetry protocol.
                    properties:
                      authentication:
                        description: Defines authentication options for the OTLP output
                        properties:
                          basic:
                            description: Activates `Basic` authentication for the
                              destination providing relevant Secrets.
                            properties:
                              password:
                                description: Contains the basic auth password or a
                                  Secret reference.
                                properties:
                                  value:
                                    description: Value that can contain references
                                      to Secret values.
                                    type: string
                                  valueFrom:
                                    properties:
                                      secretKeyRef:
                                        description: Refers to a key in a Secret.
                                          You must provide `name` and `namespace`
                                          of the Secret, as well as the name of the
                                          `key`.
                                        properties:
                                          key:
                                            type: string
                                          name:
                                            type: string
                                          namespace:
                                            type: string
                                        type: object
                                    type: object
                                type: object
                              user:
                                description: Contains the basic auth username or a
                                  Secret reference.
                                properties:
                                  value:
                                    description: Value that can contain references
                                      to Secret values.
                                    type: string
                                  valueFrom:
                                    properties:
                                      secretKeyRef:
                                        description: Refers to a key in a Secret.
                                          You must provide `name` and `namespace`
                                          of the Secret, as well as the name of the
                                          `key`.
                                        properties:
                                          key:
                                            type: string
                                          name:
                                            type: string
                                          namespace:
                                            type: string
                                        type: object
                                    type: object
                                type: object
                            required:
                            - password
                            - user
                            type: object
                        type: object
                      endpoint:
                        description: Defines the host and port (<host>:<port>) of
                          an OTLP endpoint.
                        properties:
                          value:
                            description: Value that can contain references to Secret
                              values.
                            type: string
                          valueFrom:
                            properties:
                              secretKeyRef:
                                description: Refers to a key in a Secret. You must
                                  provide `name` and `namespace` of the Secret, as
                                  well as the name of the `key`.
                                properties:
                                  key:
                                    type: string
                                  name:
                                    type: string
                                  namespace:
                                    type: string
                                type: object
                            type: object
                        type: object
                      headers:
                        description: Defines custom headers to be added to outgoing
                          HTTP or GRPC requests.
                        items:
                          properties:
                            name:
                              description: Defines the header name.
                              type: string
                            value:
                              description: Value that can contain references to Secret
                                values.
                              type: string
                            valueFrom:
                              properties:
                                secretKeyRef:
                                  description: Refers to a key in a Secret. You must
                                    provide `name` and `namespace` of the Secret,
                                    as well as the name of the `key`.
                                  properties:
                                    key:
                                      type: string
                                    name:
                                      type: string
                                    namespace:
                                      type: string
                                  type: object
                              type: object
                          required:
                          - name
                          type: object
                        type: array
                      protocol:
                        default: grpc
                        description: Defines the OTLP protocol (http or grpc). Default
                          is GRPC.
                        enum:
                        - grpc
                        - http
                        minLength: 1
                        type: string
                    required:
                    - endpoint
                    type: object
                required:
                - otlp
                type: object
            required:
            - output
            type: object
          status:
            description: Defines the observed state of MetricPipeline
            properties:
              conditions:
                items:
                  description: Contains details for the current condition of this
                    MetricPipeline
                  properties:
                    lastTransitionTime:
                      format: date-time
                      type: string
                    reason:
                      type: string
                    type:
                      type: string
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.3
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: telemetry
    app.kubernetes.io/instance: telemetry-controller-manager
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: telemetry-controller-manager
    app.kubernetes.io/part-of: telemetry
  name: telemetries.operator.kyma-project.io
spec:
  group: operator.kyma-project.io
  names:
    kind: Telemetry
    listKind: TelemetryList
    plural: telemetries
    singular: telemetry
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.generation
      name: generation
      type: integer
    - jsonPath: .metadata.creationTimestamp
      name: age
      type: date
    - jsonPath: .status.state
      name: state
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Telemetry is the Schema for the telemetries API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: TelemetrySpec defines the desired state of Telemetry
            type: object
          status:
            description: TelemetryStatus defines the observed state of Telemetry
            properties:
              conditions:
                description: Conditions contain a set of conditionals to determine
                  the State of Status. If all Conditions are met, State is expected
                  to be in StateReady.
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              state:
                description: State signifies current state of Module CR. Value can
                  be one of ("Ready", "Processing", "Error", "Deleting").
                enum:
                - Processing
                - Deleting
                - Ready
                - Error
                type: string
            required:
            - state
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: telemetry
    app.kubernetes.io/instance: telemetry-controller-manager
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: telemetry-controller-manager
    app.kubernetes.io/part-of: telemetry
  name: telemetry-controller-manager
  namespace: kyma-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: telemetry
    app.kubernetes.io/instance: telemetry-controller-manager
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: telemetry-controller-manager
    app.kubernetes.io/part-of: telemetry
  name: telemetry-manager-role
rules:
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - validatingwebhookconfigurations
  verbs:
  - create
  - get
  - update
- apiGroups:
  - operator.kyma-project.io
  resources:
  - telemetries
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - operator.kyma-project.io
  resources:
  - telemetries/finalizers
  verbs:
  - update
- apiGroups:
  - operator.kyma-project.io
  resources:
  - telemetries/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterrolebindings
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterroles
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - telemetry.kyma-project.io
  resources:
  - logparsers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - telemetry.kyma-project.io
  resources:
  - logparsers/finalizers
  verbs:
  - update
- apiGroups:
  - telemetry.kyma-project.io
  resources:
  - logparsers/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - telemetry.kyma-project.io
  resources:
  - logpipelines
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - telemetry.kyma-project.io
  resources:
  - logpipelines/finalizers
  verbs:
  - update
- apiGroups:
  - telemetry.kyma-project.io
  resources:
  - logpipelines/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - telemetry.kyma-project.io
  resources:
  - metricpipelines
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - telemetry.kyma-project.io
  resources:
  - metricpipelines/finalizers
  verbs:
  - update
- apiGroups:
  - telemetry.kyma-project.io
  resources:
  - metricpipelines/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - telemetry.kyma-project.io
  resources:
  - tracepipelines
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - telemetry.kyma-project.io
  resources:
  - tracepipelines/status
  verbs:
  - get
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: telemetry
    app.kubernetes.io/instance: telemetry-controller-manager
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: telemetry-controller-manager
    app.kubernetes.io/part-of: telemetry
  name: telemetry-manager-role
  namespace: kyma-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - delete
  - patch
  - update
- apiGroups:
  - ""
  resources:
  - serviceaccounts
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - apps
  resources:
  - daemonsets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - apps
  resources:
  - replicasets
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: telemetry
    app.kubernetes.io/instance: telemetry-controller-manager
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: telemetry-controller-manager
    app.kubernetes.io/part-of: telemetry
  name: telemetry-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: telemetry-manager-role
subjects:
- kind: ServiceAccount
  name: telemetry-controller-manager
  namespace: kyma-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: telemetry
    app.kubernetes.io/instance: telemetry-controller-manager
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: telemetry-controller-manager
    app.kubernetes.io/part-of: telemetry
  name: telemetry-manager-rolebinding
  namespace: kyma-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: telemetry-manager-role
subjects:
- kind: ServiceAccount
  name: telemetry-controller-manager
  namespace: kyma-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/component: telemetry
    app.kubernetes.io/instance: telemetry-controller-manager
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: telemetry-controller-manager
    app.kubernetes.io/part-of: telemetry
  name: telemetry-leader-election-role
  namespace: kyma-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: telemetry
    app.kubernetes.io/instance: telemetry-controller-manager
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: telemetry-controller-manager
    app.kubernetes.io/part-of: telemetry
  name: telemetry-leader-election-rolebinding
  namespace: kyma-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: telemetry-leader-election-role
subjects:
- kind: ServiceAccount
  name: telemetry-controller-manager
  namespace: kyma-system
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/port: "8080"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/component: telemetry
    app.kubernetes.io/instance: telemetry-controller-manager
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: telemetry-controller-manager
    app.kubernetes.io/part-of: telemetry
  name: telemetry-controller-manager-metrics-service
  namespace: kyma-system
spec:
  ports:
  - name: http-metrics
    port: 8080
    targetPort: 8080
  selector:
    app.kubernetes.io/component: telemetry
    app.kubernetes.io/instance: telemetry-controller-manager
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: telemetry-controller-manager
    app.kubernetes.io/part-of: telemetry
    control-plane: controller-manager
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: telemetry
    app.kubernetes.io/instance: telemetry-controller-manager
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: telemetry-controller-manager
    app.kubernetes.io/part-of: telemetry
  name: telemetry-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: telemetry
    app.kubernetes.io/instance: telemetry-controller-manager
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: telemetry-controller-manager
    app.kubernetes.io/part-of: telemetry
  name: telemetry-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: telemetry-proxy-role
subjects:
- kind: ServiceAccount
  name: telemetry-controller-manager
  namespace: kyma-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: telemetry
    app.kubernetes.io/instance: telemetry-controller-manager
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: telemetry-controller-manager
    app.kubernetes.io/part-of: telemetry
  name: telemetry-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: v1
kind: Namespace
metadata:
  labels:
    app.kubernetes.io/component: telemetry
    app.kubernetes.io/instance: telemetry-controller-manager
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: telemetry-controller-manager
    app.kubernetes.io/part-of: telemetry
    control-plane: controller-manager
  name: kyma-system
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: telemetry
    app.kubernetes.io/instance: telemetry-controller-manager
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: telemetry-controller-manager
    app.kubernetes.io/part-of: telemetry
    control-plane: controller-manager
  name: telemetry-controller-manager
  namespace: kyma-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: telemetry
      app.kubernetes.io/instance: telemetry-controller-manager
      app.kubernetes.io/managed-by: kustomize
      app.kubernetes.io/name: telemetry-controller-manager
      app.kubernetes.io/part-of: telemetry
      control-plane: controller-manager
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        app.kubernetes.io/component: telemetry
        app.kubernetes.io/instance: telemetry-controller-manager
        app.kubernetes.io/managed-by: kustomize
        app.kubernetes.io/name: telemetry-controller-manager
        app.kubernetes.io/part-of: telemetry
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --cert-dir=/tmp
        - --fluent-bit-cpu-request=100m
        - --fluent-bit-memory-request=50Mi
        - --fluent-bit-denied-filter-plugins=kubernetes,rewrite_tag,multiline
        - --trace-collector-cpu-limit=1
        - --trace-collector-memory-limit=1Gi
        - --trace-collector-cpu-request=25m
        - --trace-collector-memory-request=32Mi
        - --validating-webhook-enabled=true
        - --manager-namespace=$(MY_POD_NAMESPACE)
        command:
        - /manager
        env:
        - name: MY_POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: k3d-kyma-registry:5001/telemetry-manager:latest
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 100m
            memory: 256Mi
          requests:
            cpu: 5m
            memory: 20Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: false
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: telemetry-controller-manager
      terminationGracePeriodSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: telemetry
    app.kubernetes.io/instance: telemetry-controller-manager
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: telemetry-controller-manager
    app.kubernetes.io/part-of: telemetry
  name: telemetry-operator-webhook
  namespace: kyma-system
spec:
  ports:
  - port: 443
    protocol: TCP
    targetPort: 9443
  selector:
    app.kubernetes.io/component: telemetry
    app.kubernetes.io/instance: telemetry-controller-manager
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: telemetry-controller-manager
    app.kubernetes.io/part-of: telemetry
    control-plane: controller-manager
