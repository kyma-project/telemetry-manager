---
apiVersion: v1
kind: Namespace
metadata:
  name: metric-sink
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: metric-sink-config
  namespace: metric-sink
data:
  config.yaml: |
    receivers:
      otlp:
        protocols:
          grpc: {}
          http: {}
    exporters:
      debug:
        verbosity: detailed
    service:
      pipelines:
        metrics:
          receivers:
            - otlp
          exporters:
            - debug
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: metric-sink
  namespace: metric-sink
spec:
  replicas: 1
  selector:
    matchLabels:
      app: metric-sink
  strategy: {}
  template:
    metadata:
      labels:
        app: metric-sink
    spec:
      volumes:
        - name: config
          configMap:
            name: metric-sink-config
      securityContext:
        fsGroup: 101
      containers:
        - image: otel/opentelemetry-collector-contrib:latest
          name: collector
          volumeMounts:
            - name: config
              mountPath: /etc/collector
          args:
            - --config=/etc/collector/config.yaml
---
apiVersion: v1
kind: Service
metadata:
  name: metric-sink
  namespace: metric-sink
spec:
  ports:
    - name: grpc-otlp
      port: 4317
      protocol: TCP
      targetPort: 4317
    - name: http-otlp
      port: 4318
      protocol: TCP
      targetPort: 4318
  selector:
    app: metric-sink
---
apiVersion: v1
kind: Namespace
metadata:
  name: metric-gen
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: metric-gen
  namespace: metric-gen
spec:
  replicas: 1
  selector:
    matchLabels:
      app: metric-gen
  template:
    metadata:
      labels:
        app: metric-gen
    spec:
      containers:
        - image: europe-docker.pkg.dev/kyma-project/prod/examples/monitoring-custom-metrics:v20230905-b823fd14
          imagePullPolicy: IfNotPresent
          name: metric-gen
          ports:
            - containerPort: 8080
              name: http-metrics
              protocol: TCP
          resources:
            limits:
              memory: 100Mi
            requests:
              memory: 32Mi
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/path: "/metrics"
    prometheus.io/port: "8080"
    prometheus.io/scrape: "true"
  name: metric-gen-metrics
  namespace: metric-gen
spec:
  ports:
    - name: http-metrics
      port: 8080
      protocol: TCP
      targetPort: 8080
  selector:
    app: metric-gen
  type: ClusterIP
---
apiVersion: telemetry.kyma-project.io/v1alpha1
kind: MetricPipeline
metadata:
  name: sample
spec:
  input:
    runtime:
      enabled: true
    prometheus:
      enabled: true
    istio:
      enabled: true
  output:
    otlp:
      endpoint:
        value: http://metric-sink.metric-sink:4317
