---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.3
  creationTimestamp: null
  name: tracepipelines.telemetry.kyma-project.io
spec:
  group: telemetry.kyma-project.io
  names:
    kind: TracePipeline
    listKind: TracePipelineList
    plural: tracepipelines
    singular: tracepipeline
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=="ConfigurationGenerated")].status
      name: Configuration Generated
      type: string
    - jsonPath: .status.conditions[?(@.type=="GatewayHealthy")].status
      name: Gateway Healthy
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: TracePipeline is the Schema for the tracepipelines API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Defines the desired state of TracePipeline
            properties:
              output:
                description: Defines a destination for shipping trace data. Only one
                  can be defined per pipeline.
                properties:
                  otlp:
                    description: Configures the underlying Otel Collector with an
                      [OTLP exporter](https://github.com/open-telemetry/opentelemetry-collector/blob/main/exporter/otlpexporter/README.md).
                      If you switch `protocol`to `http`, an [OTLP HTTP exporter](https://github.com/open-telemetry/opentelemetry-collector/tree/main/exporter/otlphttpexporter)
                      is used.
                    properties:
                      authentication:
                        description: Defines authentication options for the OTLP output
                        properties:
                          basic:
                            description: Activates `Basic` authentication for the
                              destination providing relevant Secrets.
                            properties:
                              password:
                                description: Contains the basic auth password or a
                                  Secret reference.
                                properties:
                                  value:
                                    description: The value as plain text.
                                    type: string
                                  valueFrom:
                                    description: The value as a reference to a resource.
                                    properties:
                                      secretKeyRef:
                                        description: Refers to the value of a specific
                                          key in a Secret. You must provide `name`
                                          and `namespace` of the Secret, as well as
                                          the name of the `key`.
                                        properties:
                                          key:
                                            description: The name of the attribute
                                              of the Secret holding the referenced
                                              value.
                                            type: string
                                          name:
                                            description: The name of the Secret containing
                                              the referenced value
                                            type: string
                                          namespace:
                                            description: The name of the Namespace
                                              containing the Secret with the referenced
                                              value.
                                            type: string
                                        type: object
                                    type: object
                                type: object
                              user:
                                description: Contains the basic auth username or a
                                  Secret reference.
                                properties:
                                  value:
                                    description: The value as plain text.
                                    type: string
                                  valueFrom:
                                    description: The value as a reference to a resource.
                                    properties:
                                      secretKeyRef:
                                        description: Refers to the value of a specific
                                          key in a Secret. You must provide `name`
                                          and `namespace` of the Secret, as well as
                                          the name of the `key`.
                                        properties:
                                          key:
                                            description: The name of the attribute
                                              of the Secret holding the referenced
                                              value.
                                            type: string
                                          name:
                                            description: The name of the Secret containing
                                              the referenced value
                                            type: string
                                          namespace:
                                            description: The name of the Namespace
                                              containing the Secret with the referenced
                                              value.
                                            type: string
                                        type: object
                                    type: object
                                type: object
                            required:
                            - password
                            - user
                            type: object
                        type: object
                      endpoint:
                        description: Defines the host and port (<host>:<port>) of
                          an OTLP endpoint.
                        properties:
                          value:
                            description: The value as plain text.
                            type: string
                          valueFrom:
                            description: The value as a reference to a resource.
                            properties:
                              secretKeyRef:
                                description: Refers to the value of a specific key
                                  in a Secret. You must provide `name` and `namespace`
                                  of the Secret, as well as the name of the `key`.
                                properties:
                                  key:
                                    description: The name of the attribute of the
                                      Secret holding the referenced value.
                                    type: string
                                  name:
                                    description: The name of the Secret containing
                                      the referenced value
                                    type: string
                                  namespace:
                                    description: The name of the Namespace containing
                                      the Secret with the referenced value.
                                    type: string
                                type: object
                            type: object
                        type: object
                      headers:
                        description: Defines custom headers to be added to outgoing
                          HTTP or GRPC requests.
                        items:
                          properties:
                            name:
                              description: Defines the header name.
                              type: string
                            prefix:
                              description: Defines an optional header value prefix.
                                The prefix is separated from the value by a space
                                character.
                              type: string
                            value:
                              description: The value as plain text.
                              type: string
                            valueFrom:
                              description: The value as a reference to a resource.
                              properties:
                                secretKeyRef:
                                  description: Refers to the value of a specific key
                                    in a Secret. You must provide `name` and `namespace`
                                    of the Secret, as well as the name of the `key`.
                                  properties:
                                    key:
                                      description: The name of the attribute of the
                                        Secret holding the referenced value.
                                      type: string
                                    name:
                                      description: The name of the Secret containing
                                        the referenced value
                                      type: string
                                    namespace:
                                      description: The name of the Namespace containing
                                        the Secret with the referenced value.
                                      type: string
                                  type: object
                              type: object
                          required:
                          - name
                          type: object
                        type: array
                      path:
                        description: Defines OTLP export URL path (only for the HTTP
                          protocol). This value overrides auto-appended paths /v1/metrics
                          and /v1/traces
                        type: string
                      protocol:
                        default: grpc
                        description: Defines the OTLP protocol (http or grpc). Default
                          is grpc.
                        enum:
                        - grpc
                        - http
                        minLength: 1
                        type: string
                      tls:
                        description: Defines TLS options for the OTLP output.
                        properties:
                          ca:
                            description: Defines an optional CA certificate for server
                              certificate verification when using TLS. The certificate
                              must be provided in PEM format.
                            properties:
                              value:
                                description: The value as plain text.
                                type: string
                              valueFrom:
                                description: The value as a reference to a resource.
                                properties:
                                  secretKeyRef:
                                    description: Refers to the value of a specific
                                      key in a Secret. You must provide `name` and
                                      `namespace` of the Secret, as well as the name
                                      of the `key`.
                                    properties:
                                      key:
                                        description: The name of the attribute of
                                          the Secret holding the referenced value.
                                        type: string
                                      name:
                                        description: The name of the Secret containing
                                          the referenced value
                                        type: string
                                      namespace:
                                        description: The name of the Namespace containing
                                          the Secret with the referenced value.
                                        type: string
                                    type: object
                                type: object
                            type: object
                          cert:
                            description: Defines a client certificate to use when
                              using TLS. The certificate must be provided in PEM format.
                            properties:
                              value:
                                description: The value as plain text.
                                type: string
                              valueFrom:
                                description: The value as a reference to a resource.
                                properties:
                                  secretKeyRef:
                                    description: Refers to the value of a specific
                                      key in a Secret. You must provide `name` and
                                      `namespace` of the Secret, as well as the name
                                      of the `key`.
                                    properties:
                                      key:
                                        description: The name of the attribute of
                                          the Secret holding the referenced value.
                                        type: string
                                      name:
                                        description: The name of the Secret containing
                                          the referenced value
                                        type: string
                                      namespace:
                                        description: The name of the Namespace containing
                                          the Secret with the referenced value.
                                        type: string
                                    type: object
                                type: object
                            type: object
                          insecure:
                            description: Defines whether to send requests using plaintext
                              instead of TLS.
                            type: boolean
                          insecureSkipVerify:
                            description: Defines whether to skip server certificate
                              verification when using TLS.
                            type: boolean
                          key:
                            description: Defines the client key to use when using
                              TLS. The key must be provided in PEM format.
                            properties:
                              value:
                                description: The value as plain text.
                                type: string
                              valueFrom:
                                description: The value as a reference to a resource.
                                properties:
                                  secretKeyRef:
                                    description: Refers to the value of a specific
                                      key in a Secret. You must provide `name` and
                                      `namespace` of the Secret, as well as the name
                                      of the `key`.
                                    properties:
                                      key:
                                        description: The name of the attribute of
                                          the Secret holding the referenced value.
                                        type: string
                                      name:
                                        description: The name of the Secret containing
                                          the referenced value
                                        type: string
                                      namespace:
                                        description: The name of the Namespace containing
                                          the Secret with the referenced value.
                                        type: string
                                    type: object
                                type: object
                            type: object
                        type: object
                    required:
                    - endpoint
                    type: object
                    x-kubernetes-validations:
                    - message: Path is only available with HTTP protocol
                      rule: ((!has(self.path) || size(self.path) <= 0) && (has(self.protocol)
                        && self.protocol == 'grpc')) || (has(self.protocol) && self.protocol
                        == 'http')
                required:
                - otlp
                type: object
            required:
            - output
            type: object
          status:
            description: Shows the observed state of the TracePipeline
            properties:
              conditions:
                description: An array of conditions describing the status of the pipeline.
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
