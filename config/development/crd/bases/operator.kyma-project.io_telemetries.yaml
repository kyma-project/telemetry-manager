---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.3
  creationTimestamp: null
  name: telemetries.operator.kyma-project.io
spec:
  group: operator.kyma-project.io
  names:
    kind: Telemetry
    listKind: TelemetryList
    plural: telemetries
    singular: telemetry
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.generation
      name: generation
      type: integer
    - jsonPath: .metadata.creationTimestamp
      name: age
      type: date
    - jsonPath: .status.state
      name: state
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Telemetry is the Schema for the telemetries API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: TelemetrySpec defines the desired state of Telemetry
            properties:
              metric:
                description: MetricSpec defines the behavior of the metric gateway
                properties:
                  gateway:
                    properties:
                      scaling:
                        description: Scaling defines which strategy is used for scaling
                          the gateway, with detailed configuration options for each
                          strategy type.
                        properties:
                          static:
                            description: Static is a scaling strategy allowing you
                              to define a custom amount of replicas to be used for
                              the gateway. Present only if Type = StaticScalingStrategyType.
                            properties:
                              replicas:
                                description: Replicas defines a static number of pods
                                  to run the gateway. Minimum is 1.
                                format: int32
                                minimum: 1
                                type: integer
                            type: object
                          type:
                            description: Type of scaling strategy. Default is none,
                              using a fixed amount of replicas.
                            enum:
                            - Static
                            type: string
                        type: object
                    type: object
                type: object
              trace:
                description: TraceSpec defines the behavior of the trace gateway
                properties:
                  gateway:
                    properties:
                      scaling:
                        description: Scaling defines which strategy is used for scaling
                          the gateway, with detailed configuration options for each
                          strategy type.
                        properties:
                          static:
                            description: Static is a scaling strategy allowing you
                              to define a custom amount of replicas to be used for
                              the gateway. Present only if Type = StaticScalingStrategyType.
                            properties:
                              replicas:
                                description: Replicas defines a static number of pods
                                  to run the gateway. Minimum is 1.
                                format: int32
                                minimum: 1
                                type: integer
                            type: object
                          type:
                            description: Type of scaling strategy. Default is none,
                              using a fixed amount of replicas.
                            enum:
                            - Static
                            type: string
                        type: object
                    type: object
                type: object
            type: object
          status:
            description: TelemetryStatus defines the observed state of Telemetry
            properties:
              conditions:
                description: Conditions contain a set of conditionals to determine
                  the State of Status. If all Conditions are met, State is expected
                  to be in StateReady.
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              endpoints:
                description: endpoints for trace and metric gateway.
                nullable: true
                properties:
                  metrics:
                    description: metrics contains the endpoints for metric gateway
                      supporting OTLP.
                    properties:
                      grpc:
                        description: GRPC endpoint for OTLP.
                        type: string
                      http:
                        description: HTTP endpoint for OTLP.
                        type: string
                    type: object
                  traces:
                    description: traces contains the endpoints for trace gateway supporting
                      OTLP.
                    properties:
                      grpc:
                        description: GRPC endpoint for OTLP.
                        type: string
                      http:
                        description: HTTP endpoint for OTLP.
                        type: string
                    type: object
                type: object
              state:
                description: 'State signifies current state of Module CR. Value can
                  be one of these three: "Ready", "Deleting", or "Warning".'
                enum:
                - Deleting
                - Ready
                - Warning
                type: string
            required:
            - state
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
