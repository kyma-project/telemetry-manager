---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.3
  creationTimestamp: null
  name: metricpipelines.telemetry.kyma-project.io
spec:
  group: telemetry.kyma-project.io
  names:
    kind: MetricPipeline
    listKind: MetricPipelineList
    plural: metricpipelines
    singular: metricpipeline
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[-1].type
      name: Status
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: MetricPipeline is the Schema for the metricpipelines API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Defines the desired characteristics of MetricPipeline.
            properties:
              input:
                description: Configures different inputs to send additional metrics
                  to the metric gateway.
                properties:
                  istio:
                    description: Configures istio-proxy metrics scraping.
                    properties:
                      enabled:
                        description: If enabled, metrics for istio-proxy containers
                          are scraped from Pods that have had the istio-proxy sidecar
                          injected. The default is `false`.
                        type: boolean
                      namespaces:
                        description: Describes whether istio-proxy metrics from specific
                          Namespaces are selected. System Namespaces are enabled by
                          default.
                        properties:
                          exclude:
                            description: Exclude metrics from the specified Namespace
                              names only.
                            items:
                              type: string
                            type: array
                          include:
                            description: Include metrics from the specified Namespace
                              names only.
                            items:
                              type: string
                            type: array
                        type: object
                        x-kubernetes-validations:
                        - message: Can only define one namespace selector - either
                            'include' or 'exclude'
                          rule: '!((has(self.include) && size(self.include) != 0)
                            && (has(self.exclude) && size(self.exclude) != 0))'
                    type: object
                  otlp:
                    description: Configures the collection of push-based metrics that
                      use the OpenTelemetry protocol.
                    properties:
                      disabled:
                        description: If disabled, push-based OTLP metrics are not
                          collected. The default is `false`.
                        type: boolean
                      namespaces:
                        description: Describes whether push-based OTLP metrics from
                          specific Namespaces are selected. System Namespaces are
                          enabled by default.
                        properties:
                          exclude:
                            description: Exclude metrics from the specified Namespace
                              names only.
                            items:
                              type: string
                            type: array
                          include:
                            description: Include metrics from the specified Namespace
                              names only.
                            items:
                              type: string
                            type: array
                        type: object
                        x-kubernetes-validations:
                        - message: Can only define one namespace selector - either
                            'include' or 'exclude'
                          rule: '!((has(self.include) && size(self.include) != 0)
                            && (has(self.exclude) && size(self.exclude) != 0))'
                    type: object
                  prometheus:
                    description: Configures Prometheus scraping.
                    properties:
                      enabled:
                        description: If enabled, Pods marked with `prometheus.io/scrape=true`
                          annotation are scraped. The default is `false`.
                        type: boolean
                      namespaces:
                        default:
                          exclude:
                          - kyma-system
                          - kube-system
                          - istio-system
                          - compass-system
                        description: Describes whether Prometheus metrics from specific
                          Namespaces are selected. System Namespaces are disabled
                          by default.
                        properties:
                          exclude:
                            description: Exclude metrics from the specified Namespace
                              names only.
                            items:
                              type: string
                            type: array
                          include:
                            description: Include metrics from the specified Namespace
                              names only.
                            items:
                              type: string
                            type: array
                        type: object
                        x-kubernetes-validations:
                        - message: Can only define one namespace selector - either
                            'include' or 'exclude'
                          rule: '!((has(self.include) && size(self.include) != 0)
                            && (has(self.exclude) && size(self.exclude) != 0))'
                    type: object
                  runtime:
                    description: Configures runtime scraping.
                    properties:
                      enabled:
                        description: If enabled, workload-related Kubernetes metrics
                          are scraped. The default is `false`.
                        type: boolean
                      namespaces:
                        default:
                          exclude:
                          - kyma-system
                          - kube-system
                          - istio-system
                          - compass-system
                        description: Describes whether workload-related Kubernetes
                          metrics from specific Namespaces are selected. System Namespaces
                          are disabled by default.
                        properties:
                          exclude:
                            description: Exclude metrics from the specified Namespace
                              names only.
                            items:
                              type: string
                            type: array
                          include:
                            description: Include metrics from the specified Namespace
                              names only.
                            items:
                              type: string
                            type: array
                        type: object
                        x-kubernetes-validations:
                        - message: Can only define one namespace selector - either
                            'include' or 'exclude'
                          rule: '!((has(self.include) && size(self.include) != 0)
                            && (has(self.exclude) && size(self.exclude) != 0))'
                    type: object
                type: object
              output:
                description: Configures the metric gateway.
                properties:
                  otlp:
                    description: Defines an output using the OpenTelemetry protocol.
                    properties:
                      authentication:
                        description: Defines authentication options for the OTLP output
                        properties:
                          basic:
                            description: Activates `Basic` authentication for the
                              destination providing relevant Secrets.
                            properties:
                              password:
                                description: Contains the basic auth password or a
                                  Secret reference.
                                properties:
                                  value:
                                    description: The value as plain text.
                                    type: string
                                  valueFrom:
                                    description: The value as a reference to a resource.
                                    properties:
                                      secretKeyRef:
                                        description: Refers to the value of a specific
                                          key in a Secret. You must provide `name`
                                          and `namespace` of the Secret, as well as
                                          the name of the `key`.
                                        properties:
                                          key:
                                            description: The name of the attribute
                                              of the Secret holding the referenced
                                              value.
                                            type: string
                                          name:
                                            description: The name of the Secret containing
                                              the referenced value
                                            type: string
                                          namespace:
                                            description: The name of the Namespace
                                              containing the Secret with the referenced
                                              value.
                                            type: string
                                        type: object
                                    type: object
                                type: object
                              user:
                                description: Contains the basic auth username or a
                                  Secret reference.
                                properties:
                                  value:
                                    description: The value as plain text.
                                    type: string
                                  valueFrom:
                                    description: The value as a reference to a resource.
                                    properties:
                                      secretKeyRef:
                                        description: Refers to the value of a specific
                                          key in a Secret. You must provide `name`
                                          and `namespace` of the Secret, as well as
                                          the name of the `key`.
                                        properties:
                                          key:
                                            description: The name of the attribute
                                              of the Secret holding the referenced
                                              value.
                                            type: string
                                          name:
                                            description: The name of the Secret containing
                                              the referenced value
                                            type: string
                                          namespace:
                                            description: The name of the Namespace
                                              containing the Secret with the referenced
                                              value.
                                            type: string
                                        type: object
                                    type: object
                                type: object
                            required:
                            - password
                            - user
                            type: object
                        type: object
                      endpoint:
                        description: Defines the host and port (<host>:<port>) of
                          an OTLP endpoint.
                        properties:
                          value:
                            description: The value as plain text.
                            type: string
                          valueFrom:
                            description: The value as a reference to a resource.
                            properties:
                              secretKeyRef:
                                description: Refers to the value of a specific key
                                  in a Secret. You must provide `name` and `namespace`
                                  of the Secret, as well as the name of the `key`.
                                properties:
                                  key:
                                    description: The name of the attribute of the
                                      Secret holding the referenced value.
                                    type: string
                                  name:
                                    description: The name of the Secret containing
                                      the referenced value
                                    type: string
                                  namespace:
                                    description: The name of the Namespace containing
                                      the Secret with the referenced value.
                                    type: string
                                type: object
                            type: object
                        type: object
                      headers:
                        description: Defines custom headers to be added to outgoing
                          HTTP or GRPC requests.
                        items:
                          properties:
                            name:
                              description: Defines the header name.
                              type: string
                            value:
                              description: The value as plain text.
                              type: string
                            valueFrom:
                              description: The value as a reference to a resource.
                              properties:
                                secretKeyRef:
                                  description: Refers to the value of a specific key
                                    in a Secret. You must provide `name` and `namespace`
                                    of the Secret, as well as the name of the `key`.
                                  properties:
                                    key:
                                      description: The name of the attribute of the
                                        Secret holding the referenced value.
                                      type: string
                                    name:
                                      description: The name of the Secret containing
                                        the referenced value
                                      type: string
                                    namespace:
                                      description: The name of the Namespace containing
                                        the Secret with the referenced value.
                                      type: string
                                  type: object
                              type: object
                          required:
                          - name
                          type: object
                        type: array
                      protocol:
                        default: grpc
                        description: Defines the OTLP protocol (http or grpc). Default
                          is GRPC.
                        enum:
                        - grpc
                        - http
                        minLength: 1
                        type: string
                      tls:
                        description: Defines TLS options for the OTLP output.
                        properties:
                          ca:
                            description: Defines an optional CA certificate for server
                              certificate verification when using TLS. The certificate
                              must be provided in PEM format.
                            properties:
                              value:
                                description: The value as plain text.
                                type: string
                              valueFrom:
                                description: The value as a reference to a resource.
                                properties:
                                  secretKeyRef:
                                    description: Refers to the value of a specific
                                      key in a Secret. You must provide `name` and
                                      `namespace` of the Secret, as well as the name
                                      of the `key`.
                                    properties:
                                      key:
                                        description: The name of the attribute of
                                          the Secret holding the referenced value.
                                        type: string
                                      name:
                                        description: The name of the Secret containing
                                          the referenced value
                                        type: string
                                      namespace:
                                        description: The name of the Namespace containing
                                          the Secret with the referenced value.
                                        type: string
                                    type: object
                                type: object
                            type: object
                          cert:
                            description: Defines a client certificate to use when
                              using TLS. The certificate must be provided in PEM format.
                            properties:
                              value:
                                description: The value as plain text.
                                type: string
                              valueFrom:
                                description: The value as a reference to a resource.
                                properties:
                                  secretKeyRef:
                                    description: Refers to the value of a specific
                                      key in a Secret. You must provide `name` and
                                      `namespace` of the Secret, as well as the name
                                      of the `key`.
                                    properties:
                                      key:
                                        description: The name of the attribute of
                                          the Secret holding the referenced value.
                                        type: string
                                      name:
                                        description: The name of the Secret containing
                                          the referenced value
                                        type: string
                                      namespace:
                                        description: The name of the Namespace containing
                                          the Secret with the referenced value.
                                        type: string
                                    type: object
                                type: object
                            type: object
                          insecure:
                            description: Defines whether to send requests using plaintext
                              instead of TLS.
                            type: boolean
                          insecureSkipVerify:
                            description: Defines whether to skip server certificate
                              verification when using TLS.
                            type: boolean
                          key:
                            description: Defines the client key to use when using
                              TLS. The key must be provided in PEM format.
                            properties:
                              value:
                                description: The value as plain text.
                                type: string
                              valueFrom:
                                description: The value as a reference to a resource.
                                properties:
                                  secretKeyRef:
                                    description: Refers to the value of a specific
                                      key in a Secret. You must provide `name` and
                                      `namespace` of the Secret, as well as the name
                                      of the `key`.
                                    properties:
                                      key:
                                        description: The name of the attribute of
                                          the Secret holding the referenced value.
                                        type: string
                                      name:
                                        description: The name of the Secret containing
                                          the referenced value
                                        type: string
                                      namespace:
                                        description: The name of the Namespace containing
                                          the Secret with the referenced value.
                                        type: string
                                    type: object
                                type: object
                            type: object
                        type: object
                    required:
                    - endpoint
                    type: object
                required:
                - otlp
                type: object
            type: object
          status:
            description: Represents the current information/status of MetricPipeline.
            properties:
              conditions:
                description: An array of conditions describing the status of the pipeline.
                items:
                  description: MetricPipelineCondition contains details for the current
                    condition of this LogPipeline.
                  properties:
                    lastTransitionTime:
                      description: Point in time the condition transitioned into a
                        different state.
                      format: date-time
                      type: string
                    reason:
                      description: Reason of last transition.
                      type: string
                    type:
                      description: 'The possible transition types are:<br>- `Running`:
                        The instance is ready and usable.<br>- `Pending`: The pipeline
                        is being activated.'
                      type: string
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
