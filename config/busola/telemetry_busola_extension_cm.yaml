---
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    busola.io/extension: resource
    busola.io/extension-version: "0.5"
  name: module
data:
  dataSources: |-
    logPipelines:
      resource:
        group: telemetry.kyma-project.io
        version: v1alpha1
        kind: LogPipeline
    metricPipelines:
      resource:
        group: telemetry.kyma-project.io
        version: v1alpha1
        kind: MetricPipeline
    tracePipelines:
      resource:
        group: telemetry.kyma-project.io
        version: v1alpha1
        kind: TracePipeline
  details: |-
    header:
      - name: State
        source: status.state
        widget: Badge
    status:
      body:
        - name: OTLP Endpoints
          widget: Panel
          source: status.endpoints
          fullWidth: true
          children:
            - name: Traces GRPC
              source: traces.grpc
            - name: Traces HTTP
              source: traces.http
            - name: Metrics GRPC
              source: metrics.grpc
            - name: Metrics HTTP
              source: metrics.http
        - name: Condition details
          widget: ConditionList
          source: status.conditions
          highlights:
            - type: LogComponentsHealthy
              positive:
                - 'True'
              critical:
                - 'False'
              warning:
                - 'Unknown'
            - type: MetricComponentsHealthy
              positive:
                - 'True'
              critical:
                - 'False'
              warning:
                - 'Unknown'
            - type: TraceComponentsHealthy
              positive:
                - 'True'
              critical:
                - 'False'
              warning:
                - 'Unknown'
          customContent:
            - value:
                widget: Badge
                source: $filter(status.conditions, function($c){$c.type = 'LogComponentsHealthy'}).reason
              header: Reason
              type: LogComponentsHealthy
            - value: $readableTimestamp($filter(status.conditions, function($c){$c.type = 'LogComponentsHealthy'}).lastTransitionTime)
              header: Last transition time
              type: LogComponentsHealthy
            - value:
                widget: Badge
                source: $filter(status.conditions, function($c){$c.type = 'MetricComponentsHealthy'}).reason
              header: Reason
              type: MetricComponentsHealthy
            - value: $readableTimestamp($filter(status.conditions, function($c){$c.type = 'MetricComponentsHealthy'}).lastTransitionTime)
              header: Last transition time
              type: MetricComponentsHealthy
            - value:
                widget: Badge
                source: $filter(status.conditions, function($c){$c.type = 'TraceComponentsHealthy'}).reason
              header: Reason
              type: TraceComponentsHealthy
            - value: $readableTimestamp($filter(status.conditions, function($c){$c.type = 'TraceComponentsHealthy'}).lastTransitionTime)
              header: Last transition time
              type: TraceComponentsHealthy
    body:
      - name: Logs
        widget: Panel
        visibility: $exists(spec.log.gateway.scaling.static.replicas)
        children:
        - name: Gateway Replicas
          source: spec.log.gateway.scaling.static.replicas
        - name: Scaling Type
          source: spec.log.gateway.scaling.type
      - name: Traces
        widget: Panel
        visibility: $exists(spec.trace.gateway.scaling.static.replicas)
        children:
        - name: Gateway Replicas
          source: spec.trace.gateway.scaling.static.replicas
        - name: Scaling Type
          source: spec.trace.gateway.scaling.type
      - name: Metrics
        widget: Panel
        visibility: $exists(spec.metric.gateway.scaling.static.replicas)
        children:
        - name: Gateway Replicas
          source: spec.metric.gateway.scaling.static.replicas
        - name: Scaling Type
          source: spec.metric.gateway.scaling.type
    resourceGraph:
      colorVariant: 2
      dataSources:
        - source: logPipelines
        - source: metricPipelines
        - source: tracePipelines
  form: "- advanced: true\n  defaultExpanded: false\n  readOnly: false\n  decodable: false\n  path: spec.log\n  name: Logs\n  widget: FormGroup\n  children:\n    - advanced: true\n      defaultExpanded: false\n      readOnly: false\n      decodable: false\n      path: gateway\n      name: Gateway\n      widget: FormGroup\n      children:\n        - advanced: true\n          defaultExpanded: false\n          readOnly: false\n          decodable: false\n          path: scaling\n          name: Scaling\n          widget: FormGroup\n          children:\n            - path: type\n              override: false\n              enum:\n                - None\n            - advanced: true\n              defaultExpanded: false\n              readOnly: false\n              decodable: false\n              visibility: \"$item.spec.log.gateway.scaling.type = 'Static'\"\n              path: static\n              name: Static\n              widget: FormGroup\n              children:\n                - advanced: true\n                  defaultExpanded: false\n                  readOnly: false\n                  decodable: false\n                  path: replicas\n                  name: Replicas\n                  simple: false\n                  widget: Number\n                  type: Number\n- advanced: true\n  defaultExpanded: false\n  readOnly: false\n  decodable: false\n  path: spec.trace\n  name: Traces\n  widget: FormGroup\n  children:\n    - advanced: true\n      defaultExpanded: false\n      readOnly: false\n      decodable: false\n      path: gateway\n      name: Gateway\n      widget: FormGroup\n      children:\n        - advanced: true\n          defaultExpanded: false\n          readOnly: false\n          decodable: false\n          path: scaling\n          name: Scaling\n          widget: FormGroup\n          children:\n            - path: type\n              override: false\n              enum:\n                - None\n            - advanced: true\n              defaultExpanded: false\n              readOnly: false\n              decodable: false\n              visibility: \"$item.spec.trace.gateway.scaling.type = 'Static'\"\n              path: static\n              name: Static\n              widget: FormGroup\n              children:\n                - advanced: true\n                  defaultExpanded: false\n                  readOnly: false\n                  decodable: false\n                  path: replicas\n                  name: Replicas\n                  simple: false\n                  widget: Number\n                  type: Number  \n- advanced: true\n  defaultExpanded: false\n  readOnly: false\n  decodable: false\n  path: spec.metric\n  name: Metrics\n  widget: FormGroup\n  children:\n    - advanced: true\n      defaultExpanded: false\n      readOnly: false\n      decodable: false\n      path: gateway\n      name: Gateway\n      widget: FormGroup\n      children:\n        - advanced: true\n          defaultExpanded: false\n          readOnly: false\n          decodable: false\n          path: scaling\n          name: Scaling\n          widget: FormGroup\n          children:\n            - path: type\n              override: false\n              enum:\n                - None\n            - advanced: true\n              defaultExpanded: false\n              readOnly: false\n              decodable: false\n              visibility: \"$item.spec.metric.gateway.scaling.type = 'Static'\"\n              path: static\n              name: Static\n              widget: FormGroup\n              children:\n                - advanced: true\n                  defaultExpanded: false\n                  readOnly: false\n                  decodable: false\n                  path: replicas\n                  name: Replicas\n                  simple: false\n                  widget: Number\n"
  general: |
    resource:
      kind: Telemetry
      group: operator.kyma-project.io
      version: v1alpha1
    name: Telemetry
    category: Kyma
    urlPath: telemetries
    scope: namespace
    description: >-
      {{[Telemetry custom resource](https://kyma-project.io/#/telemetry-manager/user/resources/01-telemetry)}} configures the Telemetry module.
    features:
      actions:
        disableCreate: true
        disableDelete: true
  list: |
    - name: State
      source: status.state
      widget: Badge
