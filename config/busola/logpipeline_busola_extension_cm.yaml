---
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    busola.io/extension: resource
    busola.io/extension-version: "0.5"
  name: logpipelines
data:
  details: |-
    header:
      - source: >-
          $each(spec.output, function($v, $k) {$v.url.value or
          $v.url.valueFrom.secretKeyRef.name or $v.host.value or
          $v.host.valueFrom.secretKeyRef.name ? $k})
        placeholder: custom
        type: string
        name: Type
        isSelected: true
        widget: Text
    status:
      body:
        - name: Supported Mode
          widget: Badge
          source: $not(status.unsupportedMode)
          highlights:
            positive:
              - 'true'
            critical:
              - 'false'
        - name: Condition details
          widget: ConditionList
          source: status.conditions
          highlights:
            - type: AgentHealthy
              positive:
                - 'True'
              critical:
                - 'False'
              warning:
                - 'Unknown'
            - type: ConfigurationGenerated
              positive:
                - 'True'
              critical:
                - 'False'
              warning:
                - 'Unknown'
            - type: TelemetryFlowHealthy
              positive:
                - 'True'
              critical:
                - 'False'
              warning:
                - 'Unknown'
          customContent:
            - value:
                widget: Badge
                source: $filter(status.conditions, function($c){$c.type = 'AgentHealthy'}).reason
              header: Reason
              type: AgentHealthy
            - value: $readableTimestamp($filter(status.conditions, function($c){$c.type = 'AgentHealthy'}).lastTransitionTime)
              header: Last transition time
              type: AgentHealthy
            - value:
                widget: Badge
                source: $filter(status.conditions, function($c){$c.type = 'ConfigurationGenerated'}).reason
              header: Reason
              type: ConfigurationGenerated
            - value: $readableTimestamp($filter(status.conditions, function($c){$c.type = 'ConfigurationGenerated'}).lastTransitionTime)
              header: Last transition time
              type: ConfigurationGenerated
            - value:
                widget: Badge
                source: $filter(status.conditions, function($c){$c.type = 'TelemetryFlowHealthy'}).reason
              header: Reason
              type: TelemetryFlowHealthy
            - value: $readableTimestamp($filter(status.conditions, function($c){$c.type = 'TelemetryFlowHealthy'}).lastTransitionTime)
              header: Last transition time
              type: TelemetryFlowHealthy
    body:
      - widget: Panel
        name: Applications
        children:
          - widget: Panel
            name: Namespaces
            children:
              - name: Include
                widget: JoinedArray
                source: spec.input.application.namespaces.include
                separator: ', '
              - name: Exclude
                widget: JoinedArray
                source: spec.input.application.namespaces.exclude
                separator: ', '
              - name: System Namespaces
                source: spec.input.application.namespaces.system
          - widget: Panel
            name: Containers
            children:
              - name: Include
                widget: JoinedArray
                source: spec.input.application.containers.include
                separator: ', '
              - name: Exclude
                widget: JoinedArray
                source: spec.input.application.containers.exclude
                separator: ', '
          - widget: Panel
            name: Other Settings
            children:
              - name: Keep Annotations
                source: spec.input.application.keepAnnotations
              - name: Drop Labels
                source: spec.input.application.dropLabels
              - name: Keep Original Log Body
                source: spec.input.application.keepOriginalBody
      - widget: Panel
        name: Output
        children:
          - name: Custom
            widget: CodeViewer
            language: '''plaintext'''
            source: spec.output.custom
            visibility: $exists(spec.output.custom)
          - name: HTTP
            widget: Panel
            visibility: $exists(spec.output.http)
            children:
              - name: Host
                widget: Panel
                children:
                  - name: Value
                    source: spec.output.http.host.value
                    visibility: $exists(spec.output.http.host.value)
                  - name: Value From Secret
                    widget: ResourceRefs
                    source: spec.output.http.host.valueFrom.secretKeyRef
                    kind: Secret
                    visibility: $exists(spec.output.http.host.valueFrom.secretKeyRef.name)
              - name: User
                widget: Panel
                children:
                  - name: Value
                    source: spec.output.http.user.value
                    visibility: $exists(spec.output.http.user.value)
                  - name: Value From Secret
                    widget: ResourceRefs
                    source: spec.output.http.user.valueFrom.secretKeyRef
                    kind: Secret
                    visibility: $exists(spec.output.http.user.valueFrom.secretKeyRef.name)
              - name: Password
                widget: Panel
                children:
                  - name: Value
                    source: spec.output.http.password.value
                    visibility: $exists(spec.output.http.password.value)
                  - name: Value From Secret
                    widget: ResourceRefs
                    source: spec.output.http.password.valueFrom.secretKeyRef
                    kind: Secret
                    visibility: $exists(spec.output.http.password.valueFrom.secretKeyRef.name)
              - name: TLS Settings
                widget: Panel
                children:
                  - name: Disabled
                    source: spec.output.http.tls.disabled
                    placeholder: 'false'
                  - name: Skip certificate validation
                    source: spec.output.http.tls.skipCertificateValidation
                    placeholder: 'false'
                  - name: Ca
                    widget: Panel
                    visibility: $exists(spec.output.http.tls.ca)
                    source: spec.output.http.tls.ca
                    children:
                      - name: Value
                        source: value
                        visibility: $exists(value)
                      - name: Value From Secret
                        widget: ResourceRefs
                        source: valueFrom.secretKeyRef
                        kind: Secret
                        visibility: $exists(valueFrom.secretKeyRef.name)
                  - name: Cert
                    widget: Panel
                    visibility: $exists(spec.output.http.tls.cert)
                    source: spec.output.http.tls.cert
                    children:
                      - name: Value
                        source: value
                        visibility: $exists(value)
                      - name: Value From Secret
                        widget: ResourceRefs
                        source: valueFrom.secretKeyRef
                        kind: Secret
                        visibility: $exists(valueFrom.secretKeyRef.name)
                  - name: Key
                    widget: Panel
                    visibility: $exists(spec.output.http.tls.key)
                    source: spec.output.http.tls.key
                    children:
                      - name: Value
                        source: value
                        visibility: $exists(value)
                      - name: Value From Secret
                        widget: ResourceRefs
                        source: valueFrom.secretKeyRef
                        kind: Secret
                        visibility: $exists(valueFrom.secretKeyRef.name)
              - name: Other Settings
                widget: Panel
                children:
                  - name: Compression
                    source: spec.output.http.compress
                  - name: De-dot
                    source: spec.output.http.dedot
                    placeholder: 'false'
                  - name: Format
                    source: spec.output.http.format
                    placeholder: json
                  - name: Port
                    source: spec.output.http.port
                    placeholder: '443'
                  - name: URI
                    source: spec.output.http.uri
    resourceGraph:
      colorVariant: 2
      dataSources:
        - source: relatedSecrets
  form: "- path: spec.input\n  widget: FormGroup\n  defaultExpanded: true\n  simple: true\n  children:\n    - name: Application\n      path: application\n      widget: FormGroup\n      defaultExpanded: true\n      simple: true\n      children:\n        - name: Include Namespaces\n          widget: SimpleList\n          path: namespaces.include\n          defaultExpanded: true\n          inputInfo: Include container logs from selected namespaces\n          children:\n            - path: '[]'\n        - name: Exclude Namespaces\n          widget: SimpleList\n          path: namespaces.exclude\n          children:\n            - path: '[]'\n        - name: Include System Namespaces\n          path: namespaces.system\n        - name: Include Containers\n          widget: SimpleList\n          path: containers.include\n        - name: Exclude Containers\n          widget: SimpleList\n          path: containers.exclude\n        - name: Keep Annotations\n          path: keepAnnotations\n        - name: Drop Labels\n          path: dropLabels\n        - name: Keep Original Log Body\n          path: keepOriginalBody\n    - name: Otlp\n      path: otlp\n      widget: FormGroup\n      children:\n        - name: Disabled\n          path: disabled\n        - name: Include Namespaces\n          widget: SimpleList\n          path: namespaces.include\n          defaultExpanded: true\n          inputInfo: Include container logs from selected namespaces\n          children:\n            - path: '[]'\n        - name: Exclude Namespaces\n          widget: SimpleList\n          path: namespaces.exclude\n          children:\n            - path: '[]'\n- name: Filters\n  widget: SimpleList\n  path: spec.filters\n  children:\n    - widget: FormGroup\n      path: '[]'\n      children:\n        - widget: CodeEditor\n          path: custom\n- path: spec.output\n  widget: FormGroup\n  defaultExpanded: true\n  simple: true\n  children:\n    - name: Custom\n      path: custom\n      widget: CodeEditor\n      advanced: true\n      inputInfo: >-\n        Note: If you use a custom output, you put the LogPipeline in unsupported\n        mode\n        (https://kyma-project.io/#/telemetry-manager/user/02-logs?id=unsupported-mode)\n    - name: HTTP\n      path: http\n      widget: FormGroup\n      defaultExpanded: true\n      simple: true\n      children:\n        - name: Host\n          path: host\n          simple: true\n          widget: FormGroup\n          children:\n            - name: Value\n              path: value\n              simple: true\n              widget: Text\n            - name: Secret Reference\n              path: valueFrom.secretKeyRef\n              simple: true\n              widget: ResourceRef\n              resource:\n                kind: secret\n                version: v1\n              children:\n                - path: key\n                  simple: true\n                  enum: $keys($secret.data)\n        - name: User\n          path: user\n          simple: true\n          widget: FormGroup\n          children:\n            - name: Value\n              path: value\n              simple: true\n              widget: Text\n            - name: Secret Reference\n              path: valueFrom.secretKeyRef\n              simple: true\n              widget: ResourceRef\n              resource:\n                kind: secret\n                version: v1\n              children:\n                - path: key\n                  simple: true\n                  enum: $keys($secret.data)\n        - name: Password\n          path: password\n          simple: true\n          widget: FormGroup\n          children:\n            - name: Value\n              path: value\n              simple: true\n              widget: Text\n            - name: Secret Reference\n              path: valueFrom.secretKeyRef\n              simple: true\n              widget: ResourceRef\n              resource:\n                kind: secret\n                version: v1\n              children:\n                - path: key\n                  simple: true\n                  enum: $keys($secret.data)\n        - name: TLS\n          widget: FormGroup\n          path: tls\n          children:\n            - name: Disabled\n              path: disabled\n            - name: Skip Certificate Validation\n              path: skipCertificateValidation\n            - name: CA\n              path: ca\n              widget: FormGroup\n              simple: true\n              children:\n                - name: Value\n                  path: value\n                  widget: Text\n                  simple: true\n                - name: Secret Reference\n                  path: valueFrom.secretKeyRef\n                  widget: ResourceRef\n                  simple: true\n                  resource:\n                    kind: secret\n                    version: v1\n                  children:\n                    - simple: true\n                      path: key\n                      enum: $keys($secret.data)\n            - name: Cert\n              path: cert\n              widget: FormGroup\n              simple: true\n              children:\n                - name: Value\n                  path: value\n                  widget: Text\n                  simple: true\n                - name: Secret Reference\n                  path: valueFrom.secretKeyRef\n                  widget: ResourceRef\n                  simple: true\n                  resource:\n                    kind: secret\n                    version: v1\n                  children:\n                    - simple: true\n                      path: key\n                      enum: $keys($secret.data)\n            - name: Key\n              path: key\n              widget: FormGroup\n              simple: true\n              children:\n                - name: Value\n                  path: value\n                  widget: Text\n                  simple: true\n                - name: Secret Reference\n                  path: valueFrom.secretKeyRef\n                  widget: ResourceRef\n                  simple: true\n                  resource:\n                    kind: secret\n                    version: v1\n                  children:\n                    - simple: true\n                      path: key\n                      enum: $keys($secret.data)\n        - name: URI\n          path: uri\n          widget: Text\n        - name: Port\n          path: port\n          widget: Text\n        - name: Compress\n          path: compress\n          widget: Text\n        - name: Format\n          path: format\n          widget: Text\n        - name: Dedot\n          simple: true\n          path: dedot\n    - name: OTLP\n      path: otlp\n      widget: FormGroup\n      defaultExpanded: true\n      simple: true\n      children:\n        - name: Protocol\n          path: protocol\n          simple: true\n          widget: Text\n        - name: Endpoint\n          path: endpoint\n          simple: true\n          widget: FormGroup\n          children:\n            - name: Value\n              path: value\n              simple: true\n              widget: Text\n            - name: Secret Reference\n              path: valueFrom.secretKeyRef\n              simple: true\n              widget: ResourceRef\n              resource:\n                kind: secret\n                version: v1\n              children:\n                - path: key\n                  simple: true\n                  enum: $keys($secret.data)\n        - name: Path\n          path: path\n          simple: true\n          widget: Text\n        - name: Authentication\n          path: authentication\n          widget: FormGroup\n          simple: true\n          children:\n            - name: Basic\n              path: basic\n              simple: true\n              widget: FormGroup\n              children:\n                - name: User\n                  path: user\n                  simple: true\n                  widget: FormGroup\n                  children:\n                    - name: Value\n                      path: value\n                      simple: true\n                      widget: Text\n                    - name: Secret Reference\n                      path: valueFrom.secretKeyRef\n                      simple: true\n                      widget: ResourceRef\n                      resource:\n                        kind: secret\n                        version: v1\n                      children:\n                      - path: key\n                        simple: true\n                        enum: $keys($secret.data)\n                - name: Password\n                  path: password\n                  simple: true\n                  widget: FormGroup\n                  children:\n                    - name: Value\n                      path: value\n                      simple: true\n                      widget: Text \n                    - name: Secret Reference\n                      path: valueFrom.secretKeyRef\n                      simple: true\n                      widget: ResourceRef\n                      resource:\n                        kind: secret\n                        version: v1\n                      children:\n                        - path: key\n                          simple: true\n                          enum: $keys($secret.data)\n        - name: Headers\n          path: headers\n          widget: GenericList\n          children:\n            - name: Name\n              path: '[].name'\n              simple: true\n              widget: Text\n            - widget: Text\n              name: Value\n              path: '[].value'\n              simple: true\n            - widget: FormGroup\n              name: From Secret\n              path: '[].valueFrom'\n              children:\n                - name: Secret Reference\n                  path: secretKeyRef\n                  simple: true\n                  widget: ResourceRef\n                  resource:\n                    kind: secret\n                    version: v1\n                  children:\n                    - path: key\n                      simple: true\n                      enum: $keys($secret.data)\n            - name: Prefix\n              path: '[].prefix'\n              simple: true\n              widget: Text\n        - name: TLS\n          path: tls\n          widget: FormGroup\n          simple: true\n          children:\n            - name: Insecure\n              path: insecure\n            - name: InsecureSkipVerify\n              path: insecureSkipVerify\n            - name: CA\n              path: ca\n              simple: true\n              widget: FormGroup\n              children:\n                - name: Value\n                  path: value\n                  simple: true\n                  widget: Text\n                - name: Secret Reference\n                  path: valueFrom.secretKeyRef\n                  simple: true\n                  widget: ResourceRef\n                  resource:\n                    kind: secret\n                    version: v1\n                  children:\n                    - path: key\n                      simple: true\n                      enum: $keys($secret.data)\n            - name: Cert\n              path: cert\n              simple: true\n              widget: FormGroup\n              children:\n                - name: Value\n                  path: value\n                  simple: true\n                  widget: Text\n                - name: Secret Reference\n                  path: valueFrom.secretKeyRef\n                  simple: true\n                  widget: ResourceRef\n                  resource:\n                    kind: secret\n                    version: v1\n                  children:\n                    - path: key\n                      simple: true\n                      enum: $keys($secret.data)\n            - name: Key\n              path: key\n              simple: true\n              widget: FormGroup\n              children:\n                - name: Value\n                  path: value\n                  simple: true\n                  widget: Text\n                - name: Secret Reference\n                  path: valueFrom.secretKeyRef\n                  simple: true\n                  widget: ResourceRef\n                  resource:\n                    kind: secret\n                    version: v1\n                  children:\n                    - path: key\n                      simple: true\n                      enum: $keys($secret.data)\n"
  general: |-
    resource:
      kind: LogPipeline
      group: telemetry.kyma-project.io
      version: v1alpha1
    name: Log Pipelines
    category: Telemetry
    urlPath: logpipelines
    scope: cluster
    description: >-
      {{[LogPipeline custom resource](https://kyma-project.io/#/telemetry-manager/user/resources/02-logpipeline)}} configures a custom Log Pipeline.
  list: |-
    - source: >-
        $each(spec.output, function($v, $k) {$v.url.value or
        $v.url.valueFrom.secretKeyRef.name or $v.host.value or
        $v.host.valueFrom.secretKeyRef.name ? $k})
      placeholder: custom
      type: string
      name: Type
      isSelected: true
      widget: Text
    - name: Unsupported-Mode
      source: status.unsupportedMode
      widget: Badge
      highlights:
        positive:
          - 'false'
        critical:
          - 'true'
    - name: Status
      source: status.conditions
      widget: Columns
      children:
        - name: Type
          source: type
          widget: Badge
        - name: Status
          source: status
          widget: Badge
          highlights:
            positive:
              - 'True'
            critical:
              - 'False'
  dataSources: |-
    relatedSecrets:
      resource:
        kind: Secret
        version: v1
      filter: |-
          $item.metadata.name =  $root.spec.output.http.user.valueFrom.secretKeyRef.name or
          $item.metadata.name = $root.spec.output.http.password.valueFrom.secretKeyRef.name or
          $item.metadata.name = $root.spec.output.http.host.valueFrom.secretKeyRef.name or
          $item.metadata.name = $root.spec.output.http.url.valueFrom.secretKeyRef.name or
          $item.metadata.name = $root.spec.output.http.tls.ca.valueFrom.secretKeyRef.name or
          $item.metadata.name = $root.spec.output.http.tls.cert.valueFrom.secretKeyRef.name or
          $item.metadata.name = $root.spec.output.http.tls.key.valueFrom.secretKeyRef.name
