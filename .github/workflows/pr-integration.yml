name: PR Integration

permissions:
  contents: read

env:
  # add the tag PR-<number> to the image if it is a PR, if the trigger is merge_group, then add the sha as the tag
  MANAGER_IMAGE: europe-docker.pkg.dev/kyma-project/dev/telemetry-manager:${{ github.event_name == 'pull_request' && 'PR-' || '' }}${{ github.event.number || github.event.merge_group.head_sha }}

on:
  merge_group:
  pull_request:
    branches:
      - "main"
      - "release-*"
    # only include PRs that change:
    # go files
    # go mod files
    # test files in the test/e2e directory
    # test files in the istio directory
    # exclude go files that end with _test.go
    # exclude (go) files in the doc folder
    # include the workflow definition itself
    # include dependencies of the workflow definition
    # exclude busola configmap files
    paths:
      - "**/go.mod"
      - "**/go.sum"
      - "**.go"
      - "config/**"
      - "!config/busola/**"
      - "!**_test.go"
      - "!docs/**"
      - "test/e2e/**.go"
      - "test/integration/istio/**.go"
      - ".github/workflows/pr-integration.yml"
      - ".github/template/**"
      - ".env"
      - ".k3d-kyma.yaml"

  workflow_dispatch:

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0

      - name: Setup Golang
        uses: ./.github/template/setup-golang

  e2e-selfmonitor:
    needs: setup
    strategy:
      fail-fast: false
      matrix:
        kind:
          - logs-fluentbit
          - logs-otel-agent
          - logs-otel-gateway
          - metrics
          - traces
        scenario:
          - healthy
          - backpressure
          - outage
    name: "selfmon: ${{ matrix.kind }}-${{ matrix.scenario }}"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0

      - name: Prepare test
        uses: "./.github/template/prepare-test"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

      # we need Istio for fault injection to simulate backpressure and outages
      - name: Deploy Istio module
        if: ${{ matrix.scenario != 'healthy' }}
        run: hack/deploy-istio.sh

      - name: Deploy test prerequisites
        uses: "./.github/template/deploy-test-prerequisites"

      - name: Run tests
        run: |
          go test -v -timeout=20m ./test/selfmonitor/... -- -labels="selfmonitor-${{ matrix.scenario }}-${{ matrix.kind }}"

      - name: Finalize test
        uses: "./.github/template/finalize-test"
        if: ${{ !cancelled()  }}
        with:
          failure: failure()
          job-name: ${{ github.job }}-${{ matrix.scenario }}-${{ matrix.kind }}

  e2e:
    needs: setup
    strategy:
      fail-fast: false
      matrix:
        labels:
          # LOGS
          - name: fluent-bit
            mode: release
          - name: log-agent
            mode: release
          - name: log-gateway
            mode: release
          - name: logs-max-pipeline
            mode: release
          - name: fluent-bit-max-pipeline
            mode: release
          - name: otel-max-pipeline
            mode: release
          # METRICS
          - name: metrics-set-a
            mode: release
          - name: metrics-set-b
            mode: release
          - name: metrics-set-c
            mode: release
          - name: metrics-max-pipeline
            mode: release
          # TRACES
          - name: traces
            mode: release
          - name: traces-max-pipeline
            mode: release
          # TELEMETRY
          - name: telemetry
            mode: release
          # MISC
          - name: misc
            mode: release
          # OTHER
          - name: experimental
            mode: experimental
          # INTEGRATION
          - name: istio
            mode: integration
    name: "e2e: ${{ matrix.labels.name }}"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0

      - name: Prepare test
        uses: "./.github/template/prepare-test"
        with:
          experimental: ${{ matrix.labels.mode == 'experimental' }}
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Deploy Istio module
        if: ${{ matrix.labels.name == 'istio' &&  matrix.labels.mode == 'integration' }}
        run: hack/deploy-istio.sh

      - name: Deploy test prerequisites
        uses: "./.github/template/deploy-test-prerequisites"

      - name: Run normal e2e tests
        if: ${{ matrix.labels.mode != 'integration' }}
        run: |
          go test -v -timeout=20m ./test/e2e/... -- -labels=${{ matrix.labels.name }}

      - name: Run integration e2e tests
        if: ${{ matrix.labels.mode == 'integration' }}
        run: |
          go test -v -timeout=20m ./test/integration/... -- -labels=${{ matrix.labels.name }}

      - name: Finalize test
        uses: "./.github/template/finalize-test"
        if: ${{ !cancelled()  }}
        with:
          failure: failure()
          job-name: ${{ github.job }}-${{ matrix.labels }}

      - name: Print logs from all pods in kyma-system namespace
        if: failure()
        run: |
          for pod in $(kubectl get pods -n kyma-system -o name); do echo "=== $pod ==="; kubectl logs -n kyma-system $pod; done || true
