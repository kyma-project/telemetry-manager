name: Branch Integration

on:
  push:
    branches:
      - "main"
      - "release-*"
    paths-ignore:
      - 'docs/**'
      - 'dependencies/**'
      - '**/*.md'
      - 'OWNERS'
      - 'CODEOWNERS'
      - 'external-images.yaml'
  workflow_dispatch:

jobs:
  gardener-integration-test:
    strategy:
        fail-fast: false # if one version is not working, continue tests on other versions
        matrix:
          k8s_version: [1.31, 1.32]
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repo
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

    - name: Setup Golang
      uses: "./.github/template/setup-golang"

    # wait for the build to succeed so that the manager image is available
    - name: Wait for the image to be available in the registry
      run: "./hack/await_image.sh"
      env:
        GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        IMAGE_REPO: "europe-docker.pkg.dev/kyma-project/prod/telemetry-manager"
        # sets trigger to SHA if used in merge_group, but to ref_name if used in push
        # even if ref_name is available in merge_group event, it will be neglected
        TRIGGER: "${{ github.event.merge_group.head_sha || github.ref_name }}"
        QUERY_INTERVAL: 30

    # save gardener kubeconfig to a temp file in order to pass it to the command
    - name: Save serviceaccount to file
      shell: bash
      run: 'echo "$GARDENER_SA" > /tmp/gardener-sa.yaml'
      env:
        GARDENER_SA: ${{ secrets.GARDENER_SA }}

    # provision cluster and run tests
    - name: Run test
      run: hack/gardener-integration-test.sh
      env:
        GARDENER_SECRET_NAME: ${{ secrets.GARDENER_SECRET_NAME }}
        GARDENER_PROJECT: ${{ secrets.GARDENER_PROJECT }}
        GARDENER_SA_PATH: /tmp/gardener-sa.yaml
        GARDENER_K8S_VERSION: ${{ matrix.k8s_version }}

    - name: Upload Report
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
      if: success() || failure()
      with:
        name: ${{ github.job }}-${{ matrix.k8s_version }}-report
        path: junit-report*.xml

    - name: Send slack message on failure
      uses: slackapi/slack-github-action@b0fa283ad8fea605de13dc3f449259339835fc52 # v2.1.0
      if: failure()
      with:
        webhook: ${{ secrets.SLACK_WEBHOOK_URL }}
        webhook-type: incoming-webhook
        payload: |
          text: ""
          blocks:
            - type: "section"
              text:
                type: "mrkdwn"
                text: "Workflow <https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}|*${{ github.workflow }}*> has status *${{ job.status }}*"
            - type: "section"
              text:
                type: "mrkdwn"
                text: "See related <${{ github.event.pull_request.html_url || github.event.head_commit.url }}|commit>"
