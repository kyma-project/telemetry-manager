name: Manual Load Test



# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:
    inputs:
      pr_number:
        description: 'Pull Request Number'
        required: true
env:
  IMG: europe-docker.pkg.dev/kyma-project/prod/telemetry-manager:main
  # GARDENER_CLUSTER_NAME: "foo-BAR"
  
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "greet"
  load-test:
    strategy:
      max-parallel: 1
      matrix:
        k8s_version: ["1.27", "1.28" ]
        argument:
          - "-n ci-traces -t traces"
          - "-n ci-traces-m -t traces -m true"
          - "-n ci-traces-b -t traces -b true"
          - "-n ci-traces-mb -t traces -m true -b true"
          - "-n ci-metrics -t metrics"
          - "-n ci-metrics-m -t metrics -m true"
          - "-n ci-metrics-b -t metrics -b true"
          - "-n ci-metrics-mb -t metrics -m true -b true"
          - "-n ci-metric-ag -t metricagent"
          - "-n ci-metric-ag-b -t metricagent -b true"
          - "-n ci-fluent -t logs-fluentbit"
          - "-n ci-fluent-m -t logs-fluentbit -m true"
          - "-n ci-fluent-b -t logs-fluentbit -b true"
          - "-n ci-fluent-mb -t logs-fluentbit -m true -b true"
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          ref: 'refs/pull/${{ github.event.inputs.pr_number }}/head'
          repository: ${{ github.repository }}

      - name: Setup Golang
        uses: "./.github/template/setup-golang"

      - name: Setup Clustername
        run:  echo "GARDENER_CLUSTER_NAME=$(echo '${{ matrix.argument }}' | awk '{print $2}')" >> $GITHUB_ENV

      - name: Declare variables
        run: |
          echo "GIT_COMMIT_SHA=$(git rev-parse --short=8 HEAD)" >> $GITHUB_ENV
          echo "K8s_VERSION=$(echo ${{ matrix.k8s_version }} | sed 's/\.//g')" >> $GITHUB_ENV
        

      - name: test
        run: |
          echo "GARDENER_CLUSTER_NAME=$(echo 'ci-${{ env.GIT_COMMIT_SHA }}-${{ env.K8s_VERSION }}')" >> $GITHUB_ENV
          echo "MY_TEST=/tmp/foo.yaml" >> $GITHUB_ENV
          make test-gardener-cluster-name

      - name: Show changes
        run: echo $GARDENER_CLUSTER_NAME

      # - name: Provision k3d
      #   shell: bash
      #   run: make provision-k3d

      # - name: Deploy Istio Module
      #   run: hack/deploy-istio.sh

      # - name: Deploy Telemetry
      #   run: make deploy

      # - name: check pods before
      #   run: kubectl get pods -n kyma-system
        
      # - name: Run Load test
      #   working-directory: docs/contributor/telemetry-load-test
      #   run: ./assets/run-load-test.sh ${{ matrix.argument }}

      # - name: check pods after
      #   run: kubectl get pods -n kyma-system

#      # save gardener kubeconfig to a temp file in order to pass it to the command
#      - name: Save serviceaccount to file
#        shell: bash
#        run: 'echo "$GARDENER_SA" > /tmp/gardener-sa.yaml'
#        env:
#          GARDENER_SA: ${{ secrets.GARDENER_SA }}
#
#      # provision cluster and run tests
#      - name: Provision Gardener
#        run: make provision-gardener
#        env:
#          GARDENER_SECRET_NAME: ${{ secrets.GARDENER_SECRET_NAME }}
#          GARDENER_PROJECT: ${{ secrets.GARDENER_PROJECT }}
#          GARDENER_SA_PATH: /tmp/gardener-sa.yaml
#          GARDENER_K8S_VERSION: ${{ matrix.k8s_version }}
#
     # # Run the load test
     # - name: Run Load test
     #   working-directory: docs/contributor/telemetry-load-test
     #   run: ./assets/run-load-test.sh ${{ matrix.argument }}
