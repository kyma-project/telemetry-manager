name: PR Module

env:
  IMG: europe-docker.pkg.dev/kyma-project/dev/telemetry-manager:PR-${{ github.event.number }}

on:
  pull_request:
    branches:
      - "main"
      - "release-*"
    paths-ignore:
      - 'docs/**'
      - '**.md'
  workflow_dispatch:

jobs:
  verify-module:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repo
      uses: actions/checkout@v4

    # uses an older go version by default, so configure go with newest version
    - name: Setup golang
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
        cache: true

    - name: Provision K3D
      shell: bash
      run: make provision-k3d

    # wait for the build to succeed so that the manager image is available
    - name: Wait for the 'pull-telemetry-manager-build' job to succeed
      uses: kyma-project/wait-for-commit-status-action@2b3ffe09af8b6f40e1213d5fb7f91a7bd41ffb20
      with:
        context: "pull-telemetry-manager-build"
        commit_ref: "${{ github.event.pull_request.head.sha }}" # Note: 'github.event.pull_request.head.sha' is not same as 'github.sha' on pull requests.
        timeout: 600000 # 10 minutes in milliseconds
        # The check interval is kept long otherwise it will exhaust the GitHub rate limit (More info: https://docs.github.com/en/rest/overview/resources-in-the-rest-api?apiVersion=2022-11-28#rate-limiting)
        check_interval: 60000 # 1 minute in milliseconds
      env:
        GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        GITHUB_OWNER: "${{ github.repository_owner }}"
        GITHUB_REPO: "telemetry-manager"

    - name: Run module verification
      run: make run-e2e-deploy-module

    - name: Finalize test
      uses: "./.github/template/finalize-test"
      if: success() || failure()
      with:
        failure: failure()

    - name: Get kyma status
      shell: bash
      if: failure()
      run: |
        kubectl get kyma -A
        kubectl get kyma -A -oyaml
        kubectl describe kyma -A

    - name: Get manifest
      shell: bash
      if: failure()
      run: |
        kubectl get manifest -A
        kubectl get manifest -A -oyaml
        kubectl describe manifest -A

    - name: Get manifest
      shell: bash
      if: failure()
      run: |
        kubectl get manifest -A
        kubectl get manifest -A -oyaml
        kubectl describe manifest -A
        
    - name: Get module template
      shell: bash
      if: failure()
      run: |
        kubectl get moduletemplates -A
        kubectl get moduletemplate -A -oyaml

    - name: Get telemetry resource
      shell: bash
      if: failure()
      run: |
        kubectl get telemetries.operator.kyma-project.io -A
        kubectl get telemetries.operator.kyma-project.io -A -oyaml
