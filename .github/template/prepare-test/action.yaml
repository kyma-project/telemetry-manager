name: Prepare test
description: Prepares everything for integration test execution

inputs:
  release:
    description: Deploy manager in release mode
    required: false
  github-token:
    description: Github token to use for github access
    required: true

runs:
  using: "composite"

  steps:
    - name: Setup Golang
      uses: "./.github/template/setup-golang"

    - name: Setup Ginkgo
      shell: bash
      run: make ginkgo

    - name: Provision K3D
      shell: bash
      run: make provision-k3d

    # wait for the build to succeed so that the manager image is available
    - name: Wait for the 'pull-telemetry-manager-build' job to succeed
      uses: kyma-project/wait-for-commit-status-action@2b3ffe09af8b6f40e1213d5fb7f91a7bd41ffb20
      with:
        context: "pull-telemetry-manager-build"
        commit_ref: "${{ github.event.pull_request.head.sha }}" # Note: 'github.event.pull_request.head.sha' is not same as 'github.sha' on pull requests.
        timeout: 600000 # 10 minutes in milliseconds
        # The check interval is kept long otherwise it will exhaust the GitHub rate limit (More info: https://docs.github.com/en/rest/overview/resources-in-the-rest-api?apiVersion=2022-11-28#rate-limiting)
        check_interval: 60000 # 1 minute in milliseconds
      env:
        GITHUB_TOKEN: "${{ inputs.github-token }}"
        GITHUB_OWNER: "${{ github.repository_owner }}"
        GITHUB_REPO: "telemetry-manager"

    - name: Deploy module release
      if: ${{ inputs.release }}
      shell: bash
      run: make deploy

    - name: Deploy module experimental
      if: ${{ !inputs.release }}
      shell: bash
      run: make deploy-dev

    - name: Wait for manager readiness
      shell: bash
      run: kubectl -n kyma-system rollout status deployment telemetry-manager --timeout=90s

    - name: Print cluster info
      shell: bash
      run: |
        kubectl cluster-info
        kubectl -n kyma-system get po
