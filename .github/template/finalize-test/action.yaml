name: Finalize test
description: Finalizes integration test execution with cleanup and collecting dumps for the error scenario

inputs:
  id:
    description: A unique identifier of the test run (used for naming artifacts)
    required: true
  failure:
    description: Are we in failure mode?
    required: true
  github-token:
    description: Github token to use for github access
    required: true

runs:
  using: "composite"

  steps:
    - name: Remove skipped testcases from JUnit report
      shell: bash
      run: |
        # Install xmlstarlet if not available
        if ! command -v xmlstarlet &> /dev/null; then
          echo "Installing xmlstarlet..."
          sudo apt-get update -qq
          sudo apt-get install -y xmlstarlet
        fi
        
        # Process each JUnit report XML file to remove testcase elements containing skipped tags
        for xml_file in junit-report*.xml; do
          if [ -f "$xml_file" ]; then
            echo "Processing: $xml_file"
            # Use xmlstarlet to remove testcase elements that contain skipped child elements
            xmlstarlet ed -L --delete "//testcase[skipped]" "$xml_file"
            echo "âœ“ Removed skipped testcases from: $xml_file"
          fi
        done

    - name: Upload JUnit report
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
      with:
        name: ${{ inputs.id }}-report
        path: junit-report*.xml

    - name: Describe manager pod
      shell: bash
      if: ${{ inputs.failure }}
      run: |
        kubectl -n kyma-system describe pod -l "app.kubernetes.io/instance=telemetry, app.kubernetes.io/name=manager"

    - name: Print manager logs
      shell: bash
      if: ${{ inputs.failure }}
      run: |
        kubectl -n kyma-system logs -l "app.kubernetes.io/instance=telemetry, app.kubernetes.io/name=manager"

    - name: List Namespaces
      shell: bash
      if: ${{ inputs.failure }}
      run: |
        kubectl get namespaces

    - name: List all resources
      shell: bash
      if: ${{ inputs.failure }}
      run: |
        kubectl get all --all-namespaces
