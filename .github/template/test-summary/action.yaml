name: Test Summary
description: Downloads test artifacts and publishes consolidated test reports

inputs:
  github-token:
    description: Github token to use for github access
    required: true
  report-pattern:
    description: Pattern to match report artifacts
    required: false
    default: "*-report"
  report-path:
    description: Path where reports will be downloaded
    required: false
    default: "reports"

runs:
  using: "composite"

  steps:
    - name: Install xmlstarlet
      shell: bash
      run: |
        if ! command -v xmlstarlet &> /dev/null; then
          echo "Installing xmlstarlet..."
          sudo apt-get update -qq
          sudo apt-get install -y xmlstarlet
        else
          echo "xmlstarlet is already installed"
        fi

    - name: Download JUnit reports
      uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5.0.0
      with:
        path: ${{ inputs.report-path }}
        pattern: ${{ inputs.report-pattern }}
        merge-multiple: true

    - name: Remove skipped testcases from JUnit reports
      shell: bash
      run: |
        # Process each JUnit report XML file to remove testcase elements containing skipped tags
        for xml_file in ${{ inputs.report-path }}/*.xml; do
          if [ -f "$xml_file" ]; then
            echo "Processing: $xml_file"
            # Use xmlstarlet to remove testcase elements that contain skipped child elements
            xmlstarlet ed -L --delete "//testcase[skipped]" "$xml_file"
            echo "✓ Removed skipped testcases from: $xml_file"
          fi
        done

    - name: Remove duplicate testcases from JUnit reports
      shell: bash
      run: |
        # Process each JUnit report XML file to remove duplicate testcase elements
        for xml_file in ${{ inputs.report-path }}/*.xml; do
          if [ -f "$xml_file" ]; then
            echo "Processing duplicates in: $xml_file"
            # Use xmlstarlet to remove duplicate testcase elements anywhere in the document, keeping only the first occurrence of each name
            # This works by finding testcases that have the same name as any preceding testcase in the entire document
            xmlstarlet ed -L --delete "//testcase[@name = preceding::testcase/@name]" "$xml_file"
            echo "✓ Removed duplicate testcases from: $xml_file"
          fi
        done

    - name: Publish JUnit reports as GHA Summary
      uses: mikepenz/action-junit-report@3585e9575db828022551b4231f165eb59a0e74e3 # v5.6.2
      if: always()
      with:
        report_paths: "${{ inputs.report-path }}/junit-report*.xml"
        summary: true
        detailed_summary: true
        fail_on_failure: true
        include_passed: true
        skip_annotations: true
        token: ${{ inputs.github-token }}
