name: Test Summary
description: Downloads test artifacts and publishes consolidated test reports

inputs:
  reports-path:
    description: Path where reports will be downloaded
    required: false
    default: "reports"

runs:
  using: "composite"

  steps:
    - name: Install xmlstarlet
      shell: bash
      run: |
        if ! command -v xmlstarlet &> /dev/null; then
          echo "Installing xmlstarlet..."
          sudo apt-get update -qq
          sudo apt-get install -y xmlstarlet
        else
          echo "xmlstarlet is already installed"
        fi

    - name: Download JUnit reports
      uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5.0.0
      with:
        path: "${{ inputs.reports-path }}"
        pattern: "*-report"
        merge-multiple: true

    # Process each JUnit report XML file to remove testcase elements with zero execution time
    # This removes both skipped tests and tests that didn't actually run
    - name: Clean-up JUnit reports
      shell: bash
      run: |
        for xml_file in ${{ inputs.reports-path }}/*.xml; do
          if [ -f "$xml_file" ]; then
            echo "Processing: $xml_file"
            xmlstarlet ed -L --delete "//testcase[starts-with(@time, '0.0')]" "$xml_file"
            echo "âœ“ Removed zero-time testcases from: $xml_file"
          fi
        done

    - name: Publish JUnit reports as GHA Summary
      uses: mikepenz/action-junit-report@3585e9575db828022551b4231f165eb59a0e74e3 # v5.6.2
      if: always()
      with:
        report_paths: "${{ inputs.reports-path }}/junit-report*.xml"
        summary: true
        detailed_summary: true
        fail_on_failure: true
        include_passed: true
        skip_annotations: true
        group_suite: true
        include_empty_in_summary: false
        include_time_in_summary: true
