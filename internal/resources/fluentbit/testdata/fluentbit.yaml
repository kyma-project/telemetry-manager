apiVersion: v1
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: agent
    app.kubernetes.io/instance: telemetry
    app.kubernetes.io/managed-by: telemetry-manager
    app.kubernetes.io/name: fluent-bit
    app.kubernetes.io/part-of: telemetry
    kyma-project.io/module: telemetry
  name: telemetry-fluent-bit-files
  namespace: kyma-system
  ownerReferences:
  - apiVersion: telemetry.kyma-project.io/v1alpha1
    kind: LogPipeline
    name: foo-logpipeline
    uid: ""
---
apiVersion: v1
data:
  filter-script.lua: |2

    function kubernetes_map_keys(tag, timestamp, record)
      if record.kubernetes == nil then
        return 0
      end
      map_keys(record.kubernetes.annotations)
      map_keys(record.kubernetes.labels)
      return 1, timestamp, record
    end
    function map_keys(table)
      if table == nil then
        return
      end
      local new_table = {}
      local changed_keys = {}
      for key, val in pairs(table) do
        local mapped_key = string.gsub(key, "[%/%.]", "_")
        if mapped_key ~= key then
          new_table[mapped_key] = val
          changed_keys[key] = true
        end
      end
      for key in pairs(changed_keys) do
        table[key] = nil
      end
      for key, val in pairs(new_table) do
        table[key] = val
      end
    end
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: agent
    app.kubernetes.io/instance: telemetry
    app.kubernetes.io/managed-by: telemetry-manager
    app.kubernetes.io/name: fluent-bit
    app.kubernetes.io/part-of: telemetry
    kyma-project.io/module: telemetry
  name: telemetry-fluent-bit-luascripts
  namespace: kyma-system
---
apiVersion: v1
data:
  foo-logpipeline.conf: "[INPUT]\n    name             tail\n    alias            foo-logpipeline\n
    \   db               /data/flb_foo-logpipeline.db\n    exclude_path     /var/log/containers/telemetry-fluent-bit-*_kyma-system_fluent-bit-*.log,/var/log/containers/*system-logs-agent*_kyma-system_collector-*.log,/var/log/containers/*system-logs-collector*_kyma-system_collector-*.log,/var/log/containers/telemetry-log-agent_kyma-system_collector-*.log,/var/log/containers/*_kyma-system_*-*.log,/var/log/containers/*_kube-system_*-*.log,/var/log/containers/*_istio-system_*-*.log,/var/log/containers/*_compass-system_*-*.log\n
    \   mem_buf_limit    5MB\n    multiline.parser cri\n    path             /var/log/containers/*_*_*-*.log\n
    \   read_from_head   true\n    skip_long_lines  on\n    storage.type     filesystem\n
    \   tag              foo-logpipeline.*\n\n[FILTER]\n    name   record_modifier\n
    \   match  foo-logpipeline.*\n    record cluster_identifier ${KUBERNETES_SERVICE_HOST}\n\n[FILTER]\n
    \   name                kubernetes\n    match               foo-logpipeline.*\n
    \   annotations         off\n    buffer_size         1MB\n    k8s-logging.exclude
    off\n    k8s-logging.parser  on\n    keep_log            on\n    kube_tag_prefix
    \    foo-logpipeline.var.log.containers.\n    labels              on\n    merge_log
    \          on\n\n[OUTPUT]\n    name                     http\n    match                    foo-logpipeline.*\n
    \   alias                    foo-logpipeline\n    allow_duplicated_headers true\n
    \   format                   json\n    host                     127.0.0.1\n    port
    \                    8080\n    retry_limit              300\n    storage.total_limit_size
    \n    tls                      off\n    tls.verify               off\n    uri
    \                     /\n\n"
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: agent
    app.kubernetes.io/instance: telemetry
    app.kubernetes.io/managed-by: telemetry-manager
    app.kubernetes.io/name: fluent-bit
    app.kubernetes.io/part-of: telemetry
    kyma-project.io/module: telemetry
  name: telemetry-fluent-bit-sections
  namespace: kyma-system
  ownerReferences:
  - apiVersion: telemetry.kyma-project.io/v1alpha1
    kind: LogPipeline
    name: foo-logpipeline
    uid: ""
---
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: agent
    app.kubernetes.io/instance: telemetry
    app.kubernetes.io/managed-by: telemetry-manager
    app.kubernetes.io/name: fluent-bit
    app.kubernetes.io/part-of: telemetry
    kyma-project.io/module: telemetry
  name: telemetry-fluent-bit-env
  namespace: kyma-system
  ownerReferences:
  - apiVersion: telemetry.kyma-project.io/v1alpha1
    kind: LogPipeline
    name: foo-logpipeline
    uid: ""
---
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: agent
    app.kubernetes.io/instance: telemetry
    app.kubernetes.io/managed-by: telemetry-manager
    app.kubernetes.io/name: fluent-bit
    app.kubernetes.io/part-of: telemetry
    kyma-project.io/module: telemetry
  name: telemetry-fluent-bit-output-tls-config
  namespace: kyma-system
  ownerReferences:
  - apiVersion: telemetry.kyma-project.io/v1alpha1
    kind: LogPipeline
    name: foo-logpipeline
    uid: ""
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/port: "2021"
    prometheus.io/scheme: http
    prometheus.io/scrape: "true"
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: agent
    app.kubernetes.io/instance: telemetry
    app.kubernetes.io/managed-by: telemetry-manager
    app.kubernetes.io/name: fluent-bit
    app.kubernetes.io/part-of: telemetry
    kyma-project.io/module: telemetry
    telemetry.kyma-project.io/self-monitor: enabled
  name: telemetry-fluent-bit-exporter-metrics
  namespace: kyma-system
spec:
  ports:
  - name: http-metrics
    port: 2021
    protocol: TCP
    targetPort: http-metrics
  selector:
    app.kubernetes.io/instance: telemetry
    app.kubernetes.io/name: fluent-bit
  type: ClusterIP
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/path: /api/v2/metrics/prometheus
    prometheus.io/port: "2020"
    prometheus.io/scheme: http
    prometheus.io/scrape: "true"
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: agent
    app.kubernetes.io/instance: telemetry
    app.kubernetes.io/managed-by: telemetry-manager
    app.kubernetes.io/name: fluent-bit
    app.kubernetes.io/part-of: telemetry
    kyma-project.io/module: telemetry
    telemetry.kyma-project.io/self-monitor: enabled
  name: telemetry-fluent-bit-metrics
  namespace: kyma-system
spec:
  ports:
  - name: http
    port: 2020
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/instance: telemetry
    app.kubernetes.io/name: fluent-bit
  type: ClusterIP
status:
  loadBalancer: {}
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: agent
    app.kubernetes.io/instance: telemetry
    app.kubernetes.io/managed-by: telemetry-manager
    app.kubernetes.io/name: fluent-bit
    app.kubernetes.io/part-of: telemetry
    kyma-project.io/module: telemetry
  name: telemetry-fluent-bit
  namespace: kyma-system
spec:
  egress:
  - to:
    - ipBlock:
        cidr: 0.0.0.0/0
    - ipBlock:
        cidr: ::/0
  ingress:
  - from:
    - ipBlock:
        cidr: 0.0.0.0/0
    - ipBlock:
        cidr: ::/0
    ports:
    - port: 5555
      protocol: TCP
    - port: 6666
      protocol: TCP
  podSelector:
    matchLabels:
      app.kubernetes.io/instance: telemetry
      app.kubernetes.io/name: fluent-bit
  policyTypes:
  - Ingress
  - Egress
---
