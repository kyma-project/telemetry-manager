apiVersion: v1
data:
  custom_parsers.conf: |2

    [PARSER]
        Name docker_no_time
        Format json
        Time_Keep Off
        Time_Key time
        Time_Format %Y-%m-%dT%H:%M:%S.%L
  fluent-bit.conf: |2

    [SERVICE]
        Daemon Off
        Flush 1
        Log_Level warn
        Parsers_File custom_parsers.conf
        Parsers_File dynamic-parsers/parsers.conf
        HTTP_Server On
        HTTP_Listen 0.0.0.0
        HTTP_Port 2020
        storage.path /data/flb-storage/
        storage.metrics on

    @INCLUDE dynamic/*.conf
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: agent
    app.kubernetes.io/instance: telemetry
    app.kubernetes.io/managed-by: telemetry-manager
    app.kubernetes.io/name: fluent-bit
    app.kubernetes.io/part-of: telemetry
    kyma-project.io/module: telemetry
  name: telemetry-fluent-bit
  namespace: kyma-system
---
apiVersion: v1
data:
  file1: dummy-file-content
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: agent
    app.kubernetes.io/instance: telemetry
    app.kubernetes.io/managed-by: telemetry-manager
    app.kubernetes.io/name: fluent-bit
    app.kubernetes.io/part-of: telemetry
    kyma-project.io/module: telemetry
  name: telemetry-fluent-bit-files
  namespace: kyma-system
---
apiVersion: v1
data:
  filter-script.lua: |2

    function enrich_app_name(tag, timestamp, record)
      if record.kubernetes == nil then
        return 0
      end
      enrich_app_name_internal(record.kubernetes)
      return 2, timestamp, record
    end
    function dedot_and_enrich_app_name(tag, timestamp, record)
      if record.kubernetes == nil then
        return 0
      end
      enrich_app_name_internal(record.kubernetes)
      map_keys(record.kubernetes.annotations)
      map_keys(record.kubernetes.labels)
      return 2, timestamp, record
    end
    function enrich_app_name_internal(table)
      if table.labels == nil then
        return 0
      end
      table["app_name"] = table.labels["app.kubernetes.io/name"] or table.labels["app"]
    end
    function map_keys(table)
      if table == nil then
        return
      end
      local new_table = {}
      local changed_keys = {}
      for key, val in pairs(table) do
        local mapped_key = string.gsub(key, "[%/%.]", "_")
        if mapped_key ~= key then
          new_table[mapped_key] = val
          changed_keys[key] = true
        end
      end
      for key in pairs(changed_keys) do
        table[key] = nil
      end
      for key, val in pairs(new_table) do
        table[key] = val
      end
    end
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: agent
    app.kubernetes.io/instance: telemetry
    app.kubernetes.io/managed-by: telemetry-manager
    app.kubernetes.io/name: fluent-bit
    app.kubernetes.io/part-of: telemetry
    kyma-project.io/module: telemetry
  name: telemetry-fluent-bit-luascripts
  namespace: kyma-system
---
apiVersion: v1
data:
  parsers.conf: ""
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: agent
    app.kubernetes.io/instance: telemetry
    app.kubernetes.io/managed-by: telemetry-manager
    app.kubernetes.io/name: fluent-bit
    app.kubernetes.io/part-of: telemetry
    kyma-project.io/module: telemetry
  name: telemetry-fluent-bit-parsers
  namespace: kyma-system
---
apiVersion: v1
data:
  pipeline1.conf: dummy-sections-content
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: agent
    app.kubernetes.io/instance: telemetry
    app.kubernetes.io/managed-by: telemetry-manager
    app.kubernetes.io/name: fluent-bit
    app.kubernetes.io/part-of: telemetry
    kyma-project.io/module: telemetry
  name: telemetry-fluent-bit-sections
  namespace: kyma-system
---
apiVersion: v1
data:
  env-config-secret1: ZHVtbXktdmFsdWU=
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: agent
    app.kubernetes.io/instance: telemetry
    app.kubernetes.io/managed-by: telemetry-manager
    app.kubernetes.io/name: fluent-bit
    app.kubernetes.io/part-of: telemetry
    kyma-project.io/module: telemetry
  name: telemetry-fluent-bit-env
  namespace: kyma-system
---
apiVersion: v1
data:
  tls-config-secret1: ZHVtbXktdmFsdWU=
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: agent
    app.kubernetes.io/instance: telemetry
    app.kubernetes.io/managed-by: telemetry-manager
    app.kubernetes.io/name: fluent-bit
    app.kubernetes.io/part-of: telemetry
    kyma-project.io/module: telemetry
  name: telemetry-fluent-bit-output-tls-config
  namespace: kyma-system
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/port: "2021"
    prometheus.io/scheme: http
    prometheus.io/scrape: "true"
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: agent
    app.kubernetes.io/instance: telemetry
    app.kubernetes.io/managed-by: telemetry-manager
    app.kubernetes.io/name: fluent-bit
    app.kubernetes.io/part-of: telemetry
    kyma-project.io/module: telemetry
  name: telemetry-fluent-bit-exporter-metrics
  namespace: kyma-system
spec:
  ports:
  - name: http-metrics
    port: 2021
    protocol: TCP
    targetPort: http-metrics
  selector:
    app.kubernetes.io/instance: telemetry
    app.kubernetes.io/name: fluent-bit
  type: ClusterIP
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/path: /api/v2/metrics/prometheus
    prometheus.io/port: "2020"
    prometheus.io/scheme: http
    prometheus.io/scrape: "true"
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: agent
    app.kubernetes.io/instance: telemetry
    app.kubernetes.io/managed-by: telemetry-manager
    app.kubernetes.io/name: fluent-bit
    app.kubernetes.io/part-of: telemetry
    kyma-project.io/module: telemetry
    telemetry.kyma-project.io/self-monitor: enabled
  name: telemetry-fluent-bit-metrics
  namespace: kyma-system
spec:
  ports:
  - name: http
    port: 2020
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/instance: telemetry
    app.kubernetes.io/name: fluent-bit
  type: ClusterIP
status:
  loadBalancer: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  creationTimestamp: null
  name: telemetry-fluent-bit
  namespace: kyma-system
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: agent
    app.kubernetes.io/instance: telemetry
    app.kubernetes.io/managed-by: telemetry-manager
    app.kubernetes.io/name: fluent-bit
    app.kubernetes.io/part-of: telemetry
    kyma-project.io/module: telemetry
  name: telemetry-fluent-bit
  namespace: kyma-system
spec:
  selector:
    matchLabels:
      app.kubernetes.io/instance: telemetry
      app.kubernetes.io/name: fluent-bit
  template:
    metadata:
      annotations:
        checksum/config: 54ef44075035247cd4eba50a8df088d1426f0ea5deccdc0ba7b9f81078bc0226
        traffic.sidecar.istio.io/excludeInboundPorts: 2020,2021
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: agent
        app.kubernetes.io/instance: telemetry
        app.kubernetes.io/managed-by: telemetry-manager
        app.kubernetes.io/name: fluent-bit
        app.kubernetes.io/part-of: telemetry
        kyma-project.io/module: telemetry
        sidecar.istio.io/inject: "true"
        telemetry.kyma-project.io/log-export: "true"
    spec:
      containers:
      - envFrom:
        - secretRef:
            name: telemetry-fluent-bit-env
            optional: true
        image: foo-fluentbit
        livenessProbe:
          httpGet:
            path: /
            port: http
        name: fluent-bit
        ports:
        - containerPort: 2020
          name: http
        readinessProbe:
          httpGet:
            path: /api/v1/health
            port: http
        resources:
          limits:
            memory: 1Gi
          requests:
            cpu: 100m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - FOWNER
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
          runAsNonRoot: false
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - mountPath: /fluent-bit/etc
          name: shared-fluent-bit-config
        - mountPath: /fluent-bit/etc/fluent-bit.conf
          name: config
          subPath: fluent-bit.conf
        - mountPath: /fluent-bit/etc/dynamic/
          name: dynamic-config
        - mountPath: /fluent-bit/etc/dynamic-parsers/
          name: dynamic-parsers-config
        - mountPath: /fluent-bit/etc/custom_parsers.conf
          name: config
          subPath: custom_parsers.conf
        - mountPath: /fluent-bit/scripts/filter-script.lua
          name: luascripts
          subPath: filter-script.lua
        - mountPath: /var/log
          name: varlog
          readOnly: true
        - mountPath: /data
          name: varfluentbit
        - mountPath: /files
          name: dynamic-files
        - mountPath: /fluent-bit/etc/output-tls-config/
          name: output-tls-config
          readOnly: true
      - args:
        - --storage-path=/data/flb-storage/
        - --metric-name=telemetry_fsbuffer_usage_bytes
        image: foo-exporter
        name: exporter
        ports:
        - containerPort: 2021
          name: http-metrics
        resources:
          limits:
            memory: 50Mi
          requests:
            cpu: 1m
            memory: 5Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - mountPath: /data
          name: varfluentbit
      priorityClassName: foo-prio-class
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: telemetry-fluent-bit
      tolerations:
      - effect: NoExecute
        operator: Exists
      - effect: NoSchedule
        operator: Exists
      volumes:
      - configMap:
          name: telemetry-fluent-bit
        name: config
      - configMap:
          name: telemetry-fluent-bit-luascripts
        name: luascripts
      - hostPath:
          path: /var/log
        name: varlog
      - emptyDir: {}
        name: shared-fluent-bit-config
      - configMap:
          name: telemetry-fluent-bit-sections
          optional: true
        name: dynamic-config
      - configMap:
          name: telemetry-fluent-bit-parsers
          optional: true
        name: dynamic-parsers-config
      - configMap:
          name: telemetry-fluent-bit-files
          optional: true
        name: dynamic-files
      - hostPath:
          path: /var/telemetry-fluent-bit
        name: varfluentbit
      - name: output-tls-config
        secret:
          secretName: telemetry-fluent-bit-output-tls-config
  updateStrategy: {}
status:
  currentNumberScheduled: 0
  desiredNumberScheduled: 0
  numberMisscheduled: 0
  numberReady: 0
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: agent
    app.kubernetes.io/instance: telemetry
    app.kubernetes.io/managed-by: telemetry-manager
    app.kubernetes.io/name: fluent-bit
    app.kubernetes.io/part-of: telemetry
    kyma-project.io/module: telemetry
  name: telemetry-fluent-bit
  namespace: kyma-system
spec:
  egress:
  - to:
    - ipBlock:
        cidr: 0.0.0.0/0
    - ipBlock:
        cidr: ::/0
  ingress:
  - from:
    - ipBlock:
        cidr: 0.0.0.0/0
    - ipBlock:
        cidr: ::/0
    ports:
    - port: 5555
      protocol: TCP
    - port: 6666
      protocol: TCP
  podSelector:
    matchLabels:
      app.kubernetes.io/instance: telemetry
      app.kubernetes.io/name: fluent-bit
  policyTypes:
  - Ingress
  - Egress
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: agent
    app.kubernetes.io/instance: telemetry
    app.kubernetes.io/managed-by: telemetry-manager
    app.kubernetes.io/name: fluent-bit
    app.kubernetes.io/part-of: telemetry
    kyma-project.io/module: telemetry
  name: telemetry-fluent-bit
  namespace: kyma-system
rules:
- apiGroups:
  - ""
  resources:
  - namespaces
  - pods
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  creationTimestamp: null
  name: telemetry-fluent-bit
  namespace: kyma-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: telemetry-fluent-bit
subjects:
- kind: ServiceAccount
  name: telemetry-fluent-bit
  namespace: kyma-system
---
