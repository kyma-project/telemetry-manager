apiVersion: v1
data:
  relay.conf: dummy
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: agent
    app.kubernetes.io/managed-by: telemetry-manager
    app.kubernetes.io/name: telemetry-log-agent
    app.kubernetes.io/part-of: telemetry
    kyma-project.io/module: telemetry
  name: telemetry-log-agent
  namespace: kyma-system
---
apiVersion: v1
data:
  DUMMY_ENV_VAR: Zm9v
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: agent
    app.kubernetes.io/managed-by: telemetry-manager
    app.kubernetes.io/name: telemetry-log-agent
    app.kubernetes.io/part-of: telemetry
    kyma-project.io/module: telemetry
  name: telemetry-log-agent
  namespace: kyma-system
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/port: "8888"
    prometheus.io/scheme: http
    prometheus.io/scrape: "true"
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: agent
    app.kubernetes.io/managed-by: telemetry-manager
    app.kubernetes.io/name: telemetry-log-agent
    app.kubernetes.io/part-of: telemetry
    kyma-project.io/module: telemetry
    telemetry.kyma-project.io/self-monitor: enabled
  name: telemetry-log-agent-metrics
  namespace: kyma-system
spec:
  ports:
  - name: http-metrics
    port: 8888
    protocol: TCP
    targetPort: 8888
  selector:
    app.kubernetes.io/name: telemetry-log-agent
  type: ClusterIP
status:
  loadBalancer: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: agent
    app.kubernetes.io/managed-by: telemetry-manager
    app.kubernetes.io/name: telemetry-log-agent
    app.kubernetes.io/part-of: telemetry
    kyma-project.io/module: telemetry
  name: telemetry-log-agent
  namespace: kyma-system
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: agent
    app.kubernetes.io/managed-by: telemetry-manager
    app.kubernetes.io/name: telemetry-log-agent
    app.kubernetes.io/part-of: telemetry
    kyma-project.io/module: telemetry
  name: telemetry-log-agent
  namespace: kyma-system
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: telemetry-log-agent
  template:
    metadata:
      annotations:
        checksum/config: 1d8e9f768e6b24485bbdd6b9aa417d37fec897a7dafc8321355abc0d45259c9e
        proxy.istio.io/config: |
          # configure an env variable OUTPUT_CERTS to write certificates to the given folder
          proxyMetadata:
            OUTPUT_CERTS: /etc/istio-output-certs
        sidecar.istio.io/userVolumeMount: '[{"name": "istio-certs", "mountPath": "/etc/istio-output-certs"}]'
        traffic.sidecar.istio.io/excludeInboundPorts: "8888"
        traffic.sidecar.istio.io/includeOutboundIPRanges: ""
        traffic.sidecar.istio.io/includeOutboundPorts: "4317"
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: agent
        app.kubernetes.io/managed-by: telemetry-manager
        app.kubernetes.io/name: telemetry-log-agent
        app.kubernetes.io/part-of: telemetry
        kyma-project.io/module: telemetry
        sidecar.istio.io/inject: "true"
    spec:
      containers:
      - args:
        - --config=/conf/relay.conf
        env:
        - name: MY_POD_IP
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.podIP
        - name: GOMEMLIMIT
          value: "1006632960"
        envFrom:
        - secretRef:
            name: telemetry-log-agent
            optional: true
        image: opentelemetry/collector:dummy
        livenessProbe:
          httpGet:
            path: /
            port: 13133
        name: collector
        readinessProbe:
          httpGet:
            path: /
            port: 13133
        resources:
          limits:
            memory: 1200Mi
          requests:
            cpu: 15m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
          runAsGroup: 0
          runAsNonRoot: true
          runAsUser: 10001
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - mountPath: /conf
          name: config
        - mountPath: /etc/istio-output-certs
          name: istio-certs
          readOnly: true
        - mountPath: /var/log/pods
          name: varlogpods
          readOnly: true
        - mountPath: /tmp
          name: tmp
      priorityClassName: normal
      securityContext:
        runAsNonRoot: true
        runAsUser: 10001
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: telemetry-log-agent
      tolerations:
      - effect: NoExecute
        operator: Exists
      - effect: NoSchedule
        operator: Exists
      volumes:
      - configMap:
          items:
          - key: relay.conf
            path: relay.conf
          name: telemetry-log-agent
        name: config
      - emptyDir: {}
        name: istio-certs
      - hostPath:
          path: /var/log/pods
        name: varlogpods
      - hostPath:
          path: /tmp
          type: DirectoryOrCreate
        name: tmp
  updateStrategy: {}
status:
  currentNumberScheduled: 0
  desiredNumberScheduled: 0
  numberMisscheduled: 0
  numberReady: 0
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: agent
    app.kubernetes.io/managed-by: telemetry-manager
    app.kubernetes.io/name: telemetry-log-agent
    app.kubernetes.io/part-of: telemetry
    kyma-project.io/module: telemetry
  name: telemetry-log-agent
  namespace: kyma-system
spec:
  egress:
  - to:
    - ipBlock:
        cidr: 0.0.0.0/0
    - ipBlock:
        cidr: ::/0
  ingress:
  - from:
    - ipBlock:
        cidr: 0.0.0.0/0
    - ipBlock:
        cidr: ::/0
    ports:
    - port: 5555
      protocol: TCP
    - port: 6666
      protocol: TCP
  podSelector:
    matchLabels:
      app.kubernetes.io/name: telemetry-log-agent
  policyTypes:
  - Ingress
  - Egress
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: agent
    app.kubernetes.io/managed-by: telemetry-manager
    app.kubernetes.io/name: telemetry-log-agent
    app.kubernetes.io/part-of: telemetry
    kyma-project.io/module: telemetry
  name: telemetry-log-agent
  namespace: kyma-system
rules:
- apiGroups:
  - ""
  resources:
  - namespaces
  - pods
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apps
  resources:
  - replicasets
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: agent
    app.kubernetes.io/managed-by: telemetry-manager
    app.kubernetes.io/name: telemetry-log-agent
    app.kubernetes.io/part-of: telemetry
    kyma-project.io/module: telemetry
  name: telemetry-log-agent
  namespace: kyma-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: telemetry-log-agent
subjects:
- kind: ServiceAccount
  name: telemetry-log-agent
  namespace: kyma-system
---
