// Code generated by mockery. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// ErrorToMessageConverter is an autogenerated mock type for the ErrorToMessageConverter type
type ErrorToMessageConverter struct {
	mock.Mock
}

// Convert provides a mock function with given fields: err
func (_m *ErrorToMessageConverter) Convert(err error) string {
	ret := _m.Called(err)

	if len(ret) == 0 {
		panic("no return value specified for Convert")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func(error) string); ok {
		r0 = rf(err)
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// NewErrorToMessageConverter creates a new instance of ErrorToMessageConverter. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewErrorToMessageConverter(t interface {
	mock.TestingT
	Cleanup(func())
}) *ErrorToMessageConverter {
	mock := &ErrorToMessageConverter{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
