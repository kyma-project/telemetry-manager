// Code generated by mockery v2.21.3. DO NOT EDIT.

package mocks

import (
	cert "github.com/kyma-project/telemetry-manager/internal/tls/cert"

	mock "github.com/stretchr/testify/mock"
)

// TLSCertValidator is an autogenerated mock type for the TLSCertValidator type
type TLSCertValidator struct {
	mock.Mock
}

// ValidateCertificate provides a mock function with given fields: certPEM, keyPEM
func (_m *TLSCertValidator) ValidateCertificate(certPEM []byte, keyPEM []byte) cert.TLSCertValidationResult {
	ret := _m.Called(certPEM, keyPEM)

	var r0 cert.TLSCertValidationResult
	if rf, ok := ret.Get(0).(func([]byte, []byte) cert.TLSCertValidationResult); ok {
		r0 = rf(certPEM, keyPEM)
	} else {
		r0 = ret.Get(0).(cert.TLSCertValidationResult)
	}

	return r0
}

type mockConstructorTestingTNewTLSCertValidator interface {
	mock.TestingT
	Cleanup(func())
}

// NewTLSCertValidator creates a new instance of TLSCertValidator. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewTLSCertValidator(t mockConstructorTestingTNewTLSCertValidator) *TLSCertValidator {
	mock := &TLSCertValidator{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
