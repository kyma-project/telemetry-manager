extensions:
    health_check:
        endpoint: ${MY_POD_IP}:13133
    k8s_leader_elector:
        auth_type: serviceAccount
        lease_name: telemetry-metric-agent-k8scluster
    pprof:
        endpoint: 127.0.0.1:1777
service:
    pipelines:
        metrics/enrichment:
            receivers: []
            processors:
                - k8sattributes
                - service_enrichment
            exporters:
                - routing/enrichment-output
        metrics/transform1-output:
            receivers: []
            processors:
                - filter/drop-envoy-metrics-if-disabled
                - resource/insert-cluster-attributes
                - resource/delete-skip-enrichment-attribute
                - resource/drop-kyma-attributes
                - transform/transform1-user-defined
                - batch
            exporters:
                - otlp/transform1
        metrics/transform2-output:
            receivers: []
            processors:
                - filter/drop-envoy-metrics-if-disabled
                - resource/insert-cluster-attributes
                - resource/delete-skip-enrichment-attribute
                - resource/drop-kyma-attributes
                - transform/transform2-user-defined
                - batch
            exporters:
                - otlp/transform2
    telemetry:
        metrics:
            readers:
                - pull:
                    exporter:
                        prometheus:
                            host: ${MY_POD_IP}
                            port: 8888
        logs:
            level: info
            encoding: json
    extensions:
        - health_check
        - pprof
        - k8s_leader_elector
receivers: {}
processors:
    batch:
        send_batch_size: 1024
        timeout: 10s
        send_batch_max_size: 1024
    filter/drop-envoy-metrics-if-disabled:
        metrics:
            metric:
                - IsMatch(name, "^envoy_.*") and instrumentation_scope.name == "io.kyma-project.telemetry/istio"
    k8sattributes:
        auth_type: serviceAccount
        passthrough: false
        extract:
            metadata:
                - k8s.pod.name
                - k8s.node.name
                - k8s.namespace.name
                - k8s.deployment.name
                - k8s.statefulset.name
                - k8s.daemonset.name
                - k8s.cronjob.name
                - k8s.job.name
            labels:
                - from: pod
                  key: app.kubernetes.io/name
                  tag_name: kyma.kubernetes_io_app_name
                - from: pod
                  key: app
                  tag_name: kyma.app_name
                - from: node
                  key: topology.kubernetes.io/region
                  tag_name: cloud.region
                - from: node
                  key: topology.kubernetes.io/zone
                  tag_name: cloud.availability_zone
                - from: node
                  key: node.kubernetes.io/instance-type
                  tag_name: host.type
                - from: node
                  key: kubernetes.io/arch
                  tag_name: host.arch
        pod_association:
            - sources:
                - from: resource_attribute
                  name: k8s.pod.ip
            - sources:
                - from: resource_attribute
                  name: k8s.pod.uid
            - sources:
                - from: connection
    resource/delete-skip-enrichment-attribute:
        attributes:
            - action: delete
              key: io.kyma-project.telemetry.skip_enrichment
    resource/drop-kyma-attributes:
        attributes:
            - action: delete
              pattern: kyma.*
    resource/insert-cluster-attributes:
        attributes:
            - action: insert
              key: k8s.cluster.name
            - action: insert
              key: k8s.cluster.uid
    service_enrichment:
        resource_attributes:
            - kyma.kubernetes_io_app_name
            - kyma.app_name
    transform/transform1-user-defined:
        error_mode: ignore
        metric_statements:
            - statements:
                - set(attributes["log.level"], "error")
                - set(body, "transformed1")
              conditions:
                - IsMatch(body, ".*error.*")
    transform/transform2-user-defined:
        error_mode: ignore
        metric_statements:
            - statements:
                - set(attributes["log.level"], "error")
                - set(body, "transformed2")
              conditions:
                - IsMatch(body, ".*error.*")
exporters:
    otlp/transform1:
        endpoint: ${OTLP_ENDPOINT_TRANSFORM1}
        sending_queue:
            enabled: true
            queue_size: 128
        retry_on_failure:
            enabled: true
            initial_interval: 5s
            max_interval: 30s
            max_elapsed_time: 300s
    otlp/transform2:
        endpoint: ${OTLP_ENDPOINT_TRANSFORM2}
        sending_queue:
            enabled: true
            queue_size: 128
        retry_on_failure:
            enabled: true
            initial_interval: 5s
            max_interval: 30s
            max_elapsed_time: 300s
connectors:
    routing/enrichment-output:
        default_pipelines: []
        error_mode: ignore
        table: []
