// Code generated by mockery. DO NOT EDIT.

package mocks

import (
	v1alpha1 "github.com/kyma-project/telemetry-manager/apis/telemetry/v1alpha1"
	mock "github.com/stretchr/testify/mock"
)

// VariablesValidator is an autogenerated mock type for the VariablesValidator type
type VariablesValidator struct {
	mock.Mock
}

// Validate provides a mock function with given fields: logPipeline, logPipelines
func (_m *VariablesValidator) Validate(logPipeline *v1alpha1.LogPipeline, logPipelines *v1alpha1.LogPipelineList) error {
	ret := _m.Called(logPipeline, logPipelines)

	if len(ret) == 0 {
		panic("no return value specified for Validate")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(*v1alpha1.LogPipeline, *v1alpha1.LogPipelineList) error); ok {
		r0 = rf(logPipeline, logPipelines)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewVariablesValidator creates a new instance of VariablesValidator. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewVariablesValidator(t interface {
	mock.TestingT
	Cleanup(func())
}) *VariablesValidator {
	mock := &VariablesValidator{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
