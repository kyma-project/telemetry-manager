apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "telemetry-manager.fullname" . }}-manager
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/part-of: telemetry
    kyma-project.io/module: telemetry
  {{- include "telemetry-manager.labels" . | indent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: telemetry
      app.kubernetes.io/name: manager
      control-plane: telemetry-manager
      kyma-project.io/component: controller
    {{- include "telemetry-manager.selectorLabels" . | indent 6 }}
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: telemetry
        app.kubernetes.io/name: manager
        control-plane: telemetry-manager
        kyma-project.io/component: controller
      {{- include "telemetry-manager.selectorLabels" . | indent 8 }}
      annotations:
        kubectl.kubernetes.io/default-container: manager
        sidecar.istio.io/inject: "false"
    spec:
      containers:
      - args:
        {{- range $key, $value := .Values.manager.container.args }}
        - --{{ $key }}={{ $value }}
        {{- end }}
        {{- if .Values.experimental.enabled }}
        - --enable-v1beta1-log-pipelines=true
        {{- end }}
        command:
        - /manager
        env:
        - name: GOMEMLIMIT
          value: {{ quote .Values.manager.container.env.gomemlimit }}
        - name: APP_LOG_LEVEL
          value: {{ quote .Values.manager.container.env.appLogLevel }}
        - name: MANAGER_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: FLUENT_BIT_IMAGE
          value: {{ quote .Values.manager.container.env.fluentBitImage }}
        - name: FLUENT_BIT_EXPORTER_IMAGE
          value: {{ quote .Values.manager.container.env.fluentBitExporterImage }}
        - name: OTEL_COLLECTOR_IMAGE
          value: {{ quote .Values.manager.container.env.otelCollectorImage }}
        - name: SELF_MONITOR_IMAGE
          value: {{ quote .Values.manager.container.env.selfMonitorImage }}
        - name: ALPINE_IMAGE
          value: {{ quote .Values.manager.container.env.alpineImage }}
        image: {{ .Values.manager.container.image.repository }}
        imagePullPolicy: {{ .Values.manager.container.image.pullPolicy }}
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 30
          periodSeconds: 20
        name: manager
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources: {{- toYaml .Values.manager.container.resources | nindent 10 }}
        securityContext: {{- toYaml .Values.manager.container.securityContext | nindent 10 }}
        volumeMounts:
        - mountPath: /tmp
          name: crt-volume
      priorityClassName: telemetry-priority-class
      securityContext: {{- toYaml .Values.manager.securityContext | nindent 8 }}
      serviceAccountName: {{ include "telemetry-manager.fullname" . }}-manager
      terminationGracePeriodSeconds: 10
      volumes:
      - emptyDir: {}
        name: crt-volume
