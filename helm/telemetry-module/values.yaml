kubernetesClusterDomain: cluster.local
experimental:
  enabled: true
regular:
  enabled: false
manager:
  container:
    args:
    - --cert-dir=/tmp
    - --high-priority-class-name=telemetry-priority-class-high
    - --normal-priority-class-name=telemetry-priority-class
    containerSecurityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
      privileged: false
      readOnlyRootFilesystem: false
    env:
      alpineImage: europe-docker.pkg.dev/kyma-project/prod/external/library/alpine:3.22.1
      appLogLevel: info
      fluentBitExporterImage: europe-docker.pkg.dev/kyma-project/prod/directory-size-exporter:v20250724-d99b68f4
      fluentBitImage: europe-docker.pkg.dev/kyma-project/prod/external/fluent/fluent-bit:4.0.7
      gomemlimit: 300MiB
      otelCollectorImage: europe-docker.pkg.dev/kyma-project/prod/kyma-otel-collector:0.132.0-main
      selfMonitorImage: europe-docker.pkg.dev/kyma-project/prod/tpi/telemetry-self-monitor:3.5.0-8d9d348
    image:
      repository: europe-docker.pkg.dev/kyma-project/prod/telemetry-manager:main
    resources:
      limits:
        memory: 384Mi
      requests:
        cpu: 5m
        memory: 50Mi
  podSecurityContext:
    runAsNonRoot: true
    seccompProfile:
      type: RuntimeDefault
  replicas: 1
  serviceAccount:
    annotations: {}
managerMetrics:
  ports:
  - name: http-metrics
    port: 8080
    targetPort: 8080
  type: ClusterIP
managerWebhook:
  ports:
  - port: 443
    protocol: TCP
    targetPort: 9443
  type: ClusterIP
busola:
  logpipeline:
    dataSources: |-
      relatedSecrets:
        resource:
          kind: Secret
          version: v1
        filter: |-
            $item.metadata.name =  $root.spec.output.http.user.valueFrom.secretKeyRef.name or
            $item.metadata.name = $root.spec.output.http.password.valueFrom.secretKeyRef.name or
            $item.metadata.name = $root.spec.output.http.host.valueFrom.secretKeyRef.name or
            $item.metadata.name = $root.spec.output.http.url.valueFrom.secretKeyRef.name or
            $item.metadata.name = $root.spec.output.http.tls.ca.valueFrom.secretKeyRef.name or
            $item.metadata.name = $root.spec.output.http.tls.cert.valueFrom.secretKeyRef.name or
            $item.metadata.name = $root.spec.output.http.tls.key.valueFrom.secretKeyRef.name
    details: |-
      header:
        - source: >-
             $each(spec.output, function($v, $k) { $exists($v) ? $k })
          type: string
          name: Type
          isSelected: true
          widget: Text
      status:
        body:
          - name: Supported Mode
            widget: Badge
            source: $not(status.unsupportedMode)
            highlights:
              positive:
                - 'true'
              critical:
                - 'false'
          - name: Condition details
            widget: ConditionList
            source: status.conditions
            highlights:
              - type: AgentHealthy
                positive:
                  - 'True'
                critical:
                  - 'False'
                warning:
                  - 'Unknown'
              - type: ConfigurationGenerated
                positive:
                  - 'True'
                critical:
                  - 'False'
                warning:
                  - 'Unknown'
              - type: TelemetryFlowHealthy
                positive:
                  - 'True'
                critical:
                  - 'False'
                warning:
                  - 'Unknown'
            customContent:
              - value:
                  widget: Badge
                  source: $filter(status.conditions, function($c){$c.type = 'AgentHealthy'}).reason
                header: Reason
                type: AgentHealthy
              - value: $readableTimestamp($filter(status.conditions, function($c){$c.type = 'AgentHealthy'}).lastTransitionTime)
                header: Last transition time
                type: AgentHealthy
              - value:
                  widget: Badge
                  source: $filter(status.conditions, function($c){$c.type = 'ConfigurationGenerated'}).reason
                header: Reason
                type: ConfigurationGenerated
              - value: $readableTimestamp($filter(status.conditions, function($c){$c.type = 'ConfigurationGenerated'}).lastTransitionTime)
                header: Last transition time
                type: ConfigurationGenerated
              - value:
                  widget: Badge
                  source: $filter(status.conditions, function($c){$c.type = 'TelemetryFlowHealthy'}).reason
                header: Reason
                type: TelemetryFlowHealthy
              - value: $readableTimestamp($filter(status.conditions, function($c){$c.type = 'TelemetryFlowHealthy'}).lastTransitionTime)
                header: Last transition time
                type: TelemetryFlowHealthy
      body:
        - widget: Panel
          name: Input
          children:
            - widget: Panel
              name: Applications
              visibility: spec.input.application.enabled
              children:
                - name: Enabled
                  source: spec.input.application.enabled
                - widget: Panel
                  name: Namespaces
                  children:
                    - name: Include
                      widget: JoinedArray
                      source: spec.input.application.namespaces.include
                      separator: ', '
                    - name: Exclude
                      widget: JoinedArray
                      source: spec.input.application.namespaces.exclude
                      separator: ', '
                    - name: System Namespaces
                      source: spec.input.application.namespaces.system
                - widget: Panel
                  name: Containers
                  children:
                    - name: Include
                      widget: JoinedArray
                      source: spec.input.application.containers.include
                      separator: ', '
                    - name: Exclude
                      widget: JoinedArray
                      source: spec.input.application.containers.exclude
                      separator: ', '
                - widget: Panel
                  name: Other Settings
                  children:
                    - name: Keep Annotations
                      source: spec.input.application.keepAnnotations
                    - name: Drop Labels
                      source: spec.input.application.dropLabels
                    - name: Keep Original Log Body
                      source: spec.input.application.keepOriginalBody
            - widget: Panel
              name: OTLP
              visibility: $exists(spec.output.otlp)
              children:
                - name: Disabled
                  source: spec.input.otlp.disabled
                  placeholder: 'false'
                - widget: Panel
                  name: Namespaces
                  children:
                    - name: Include
                      widget: JoinedArray
                      source: spec.input.otlp.namespaces.include
                      separator: ', '
                    - name: Exclude
                      widget: JoinedArray
                      source: spec.input.otlp.namespaces.exclude
                      separator: ', '
        - widget: Panel
          name: Output
          children:
            - name: Custom
              widget: CodeViewer
              language: '''plaintext'''
              source: spec.output.custom
              visibility: $exists(spec.output.custom)
            - name: HTTP
              widget: Panel
              visibility: $exists(spec.output.http)
              children:
                - name: Host
                  widget: Panel
                  children:
                    - name: Value
                      source: spec.output.http.host.value
                      visibility: $exists(spec.output.http.host.value)
                    - name: Value From Secret
                      widget: ResourceRefs
                      source: spec.output.http.host.valueFrom.secretKeyRef
                      kind: Secret
                      visibility: $exists(spec.output.http.host.valueFrom.secretKeyRef.name)
                - name: User
                  widget: Panel
                  children:
                    - name: Value
                      source: spec.output.http.user.value
                      visibility: $exists(spec.output.http.user.value)
                    - name: Value From Secret
                      widget: ResourceRefs
                      source: spec.output.http.user.valueFrom.secretKeyRef
                      kind: Secret
                      visibility: $exists(spec.output.http.user.valueFrom.secretKeyRef.name)
                - name: Password
                  widget: Panel
                  children:
                    - name: Value
                      source: spec.output.http.password.value
                      visibility: $exists(spec.output.http.password.value)
                    - name: Value From Secret
                      widget: ResourceRefs
                      source: spec.output.http.password.valueFrom.secretKeyRef
                      kind: Secret
                      visibility: $exists(spec.output.http.password.valueFrom.secretKeyRef.name)
                - name: TLS Settings
                  widget: Panel
                  children:
                    - name: Disabled
                      source: spec.output.http.tls.disabled
                      placeholder: 'false'
                    - name: Skip certificate validation
                      source: spec.output.http.tls.skipCertificateValidation
                      placeholder: 'false'
                    - name: Ca
                      widget: Panel
                      visibility: $exists(spec.output.http.tls.ca)
                      source: spec.output.http.tls.ca
                      children:
                        - name: Value
                          source: value
                          visibility: $exists(value)
                        - name: Value From Secret
                          widget: ResourceRefs
                          source: valueFrom.secretKeyRef
                          kind: Secret
                          visibility: $exists(valueFrom.secretKeyRef.name)
                    - name: Cert
                      widget: Panel
                      visibility: $exists(spec.output.http.tls.cert)
                      source: spec.output.http.tls.cert
                      children:
                        - name: Value
                          source: value
                          visibility: $exists(value)
                        - name: Value From Secret
                          widget: ResourceRefs
                          source: valueFrom.secretKeyRef
                          kind: Secret
                          visibility: $exists(valueFrom.secretKeyRef.name)
                    - name: Key
                      widget: Panel
                      visibility: $exists(spec.output.http.tls.key)
                      source: spec.output.http.tls.key
                      children:
                        - name: Value
                          source: value
                          visibility: $exists(value)
                        - name: Value From Secret
                          widget: ResourceRefs
                          source: valueFrom.secretKeyRef
                          kind: Secret
                          visibility: $exists(valueFrom.secretKeyRef.name)
                - name: Other Settings
                  widget: Panel
                  children:
                    - name: Compression
                      source: spec.output.http.compress
                    - name: De-dot
                      source: spec.output.http.dedot
                      placeholder: 'false'
                    - name: Format
                      source: spec.output.http.format
                      placeholder: json
                    - name: Port
                      source: spec.output.http.port
                      placeholder: '443'
                    - name: URI
                      source: spec.output.http.uri
            - name: OTLP
              widget: Panel
              visibility: $exists(spec.output.otlp)
              children:
                - name: Host
                  widget: Panel
                  children:
                    - name: Value
                      source: spec.output.otlp.endpoint.value
                      visibility: $exists(spec.output.otlp.endpoint.value)
                    - name: Value From Secret
                      widget: ResourceRefs
                      source: spec.output.otlp.endpoint.valueFrom.secretKeyRef
                      kind: Secret
                      visibility: $exists(spec.output.otlp.endpoint.valueFrom.secretKeyRef.name)
      resourceGraph:
        colorVariant: 2
        dataSources:
          - source: relatedSecrets
    form: |-
      - path: spec.input
        widget: FormGroup
        defaultExpanded: true
        children:
          - var: applicationInput
            type: string
            simple: true
            defaultValue: "Enabled"
            name: Application Input
            enum: ["Disabled", "Enabled"]
            trigger: [appChange]
          - name: Application
            path: application
            widget: FormGroup
            visibility: '$applicationInput = "Enabled"'
            overwrite: false
            defaultExpanded: true
            children:
              - name: Enabled
                path: enabled
                visibility: false
                overwrite: false
                subscribe:
                  appChange: '$applicationInput = "Enabled"'
              - name: Include Namespaces
                widget: SimpleList
                path: namespaces.include
                defaultExpanded: true
                inputInfo: Include container logs from selected namespaces
                children:
                  - path: '[]'
              - name: Exclude Namespaces
                widget: SimpleList
                path: namespaces.exclude
                children:
                  - path: '[]'
              - name: Include System Namespaces
                path: namespaces.system
              - name: Include Containers
                widget: SimpleList
                path: containers.include
              - name: Exclude Containers
                widget: SimpleList
                path: containers.exclude
              - name: Keep Annotations
                path: keepAnnotations
              - name: Drop Labels
                path: dropLabels
              - name: Keep Original Log Body
                path: keepOriginalBody
          - var: otlpInput
            type: string
            simple: true
            defaultValue: "Enabled"
            name: OTLP Input
            enum: ["Disabled", "Enabled"]
            trigger: [otlpChange]
          - name: OTLP
            path: otlp
            visibility: '$otlpInput = "Enabled"'
            overwrite: false
            defaultExpanded: true
            widget: FormGroup
            children:
              - name: Disabled
                path: disabled
                visibility: false
                overwrite: false
                subscribe:
                  otlpChange: '$otlpInput = "Disabled"'
              - name: Include Namespaces
                widget: SimpleList
                path: namespaces.include
                defaultExpanded: true
                inputInfo: Include container logs from selected namespaces
                children:
                  - path: '[]'
              - name: Exclude Namespaces
                widget: SimpleList
                path: namespaces.exclude
                children:
                  - path: '[]'
      - name: Filters
        widget: SimpleList
        path: spec.filters
        children:
          - widget: FormGroup
            path: '[]'
            children:
              - widget: CodeEditor
                path: custom
      - path: spec.output
        widget: FormGroup
        defaultExpanded: true
        children:
          - var: outputType
            type: string
            simple: true
            defaultValue: "OTLP"
            name: Output Type
            enum: [HTTP, OTLP]
          - name: Custom
            path: custom
            widget: CodeEditor
            visibility: '$outputType = "HTTP"'
            advanced: true
            inputInfo: >-
              Note: If you use a custom output, you put the LogPipeline in unsupported
              mode
              (https://kyma-project.io/#/telemetry-manager/user/02-logs?id=unsupported-mode)
          - name: HTTP
            path: http
            widget: FormGroup
            visibility: '$outputType = "HTTP"'
            defaultExpanded: true
            children:
              - name: Host
                path: host
                widget: FormGroup
                children:
                  - name: Value
                    path: value
                    widget: Text
                  - name: Secret Reference
                    path: valueFrom.secretKeyRef
                    widget: ResourceRef
                    resource:
                      kind: secret
                      version: v1
                    children:
                      - path: key
                        enum: $keys($secret.data)
              - name: User
                path: user
                widget: FormGroup
                children:
                  - name: Value
                    path: value
                    widget: Text
                  - name: Secret Reference
                    path: valueFrom.secretKeyRef
                    widget: ResourceRef
                    resource:
                      kind: secret
                      version: v1
                    children:
                      - path: key
                        enum: $keys($secret.data)
              - name: Password
                path: password
                widget: FormGroup
                children:
                  - name: Value
                    path: value
                    widget: Text
                  - name: Secret Reference
                    path: valueFrom.secretKeyRef
                    widget: ResourceRef
                    resource:
                      kind: secret
                      version: v1
                    children:
                      - path: key
                        enum: $keys($secret.data)
              - name: TLS
                widget: FormGroup
                path: tls
                children:
                  - name: Disabled
                    path: disabled
                  - name: Skip Certificate Validation
                    path: skipCertificateValidation
                  - name: CA
                    path: ca
                    widget: FormGroup
                    children:
                      - name: Value
                        path: value
                        widget: Text
                      - name: Secret Reference
                        path: valueFrom.secretKeyRef
                        widget: ResourceRef
                        resource:
                          kind: secret
                          version: v1
                        children:
                          - path: key
                            enum: $keys($secret.data)
                  - name: Cert
                    path: cert
                    widget: FormGroup
                    children:
                      - name: Value
                        path: value
                        widget: Text
                      - name: Secret Reference
                        path: valueFrom.secretKeyRef
                        widget: ResourceRef
                        resource:
                          kind: secret
                          version: v1
                        children:
                          - path: key
                            enum: $keys($secret.data)
                  - name: Key
                    path: key
                    widget: FormGroup
                    children:
                      - name: Value
                        path: value
                        widget: Text
                      - name: Secret Reference
                        path: valueFrom.secretKeyRef
                        widget: ResourceRef
                        resource:
                          kind: secret
                          version: v1
                        children:
                          - path: key
                            enum: $keys($secret.data)
              - name: URI
                path: uri
                widget: Text
              - name: Port
                path: port
                widget: Text
              - name: Compress
                path: compress
                widget: Text
              - name: Format
                path: format
                widget: Text
              - name: Dedot
                path: dedot
          - name: OTLP
            path: otlp
            widget: FormGroup
            visibility: '$outputType = "OTLP"'
            defaultExpanded: true
            children:
              - name: Protocol
                path: protocol
                widget: Text
              - name: Endpoint
                path: endpoint
                widget: FormGroup
                children:
                  - name: Value
                    path: value
                    widget: Text
                  - name: Secret Reference
                    path: valueFrom.secretKeyRef
                    widget: ResourceRef
                    resource:
                      kind: secret
                      version: v1
                    children:
                      - path: key
                        enum: $keys($secret.data)
              - name: Path
                path: path
                widget: Text
              - name: Authentication
                path: authentication
                widget: FormGroup
                children:
                  - name: Basic
                    path: basic
                    widget: FormGroup
                    children:
                      - name: User
                        path: user
                        widget: FormGroup
                        children:
                          - name: Value
                            path: value
                            widget: Text
                          - name: Secret Reference
                            path: valueFrom.secretKeyRef
                            widget: ResourceRef
                            resource:
                              kind: secret
                              version: v1
                            children:
                            - path: key
                              enum: $keys($secret.data)
                      - name: Password
                        path: password
                        widget: FormGroup
                        children:
                          - name: Value
                            path: value
                            widget: Text
                          - name: Secret Reference
                            path: valueFrom.secretKeyRef
                            widget: ResourceRef
                            resource:
                              kind: secret
                              version: v1
                            children:
                              - path: key
                                enum: $keys($secret.data)
              - name: Headers
                path: headers
                widget: GenericList
                children:
                  - name: Name
                    path: '[].name'
                    widget: Text
                  - widget: Text
                    name: Value
                    path: '[].value'
                  - widget: FormGroup
                    name: From Secret
                    path: '[].valueFrom'
                    children:
                      - name: Secret Reference
                        path: secretKeyRef
                        widget: ResourceRef
                        resource:
                          kind: secret
                          version: v1
                        children:
                          - path: key
                            enum: $keys($secret.data)
                  - name: Prefix
                    path: '[].prefix'
                    widget: Text
              - name: TLS
                path: tls
                widget: FormGroup
                children:
                  - name: Insecure
                    path: insecure
                  - name: InsecureSkipVerify
                    path: insecureSkipVerify
                  - name: CA
                    path: ca
                    widget: FormGroup
                    children:
                      - name: Value
                        path: value
                        widget: Text
                      - name: Secret Reference
                        path: valueFrom.secretKeyRef
                        widget: ResourceRef
                        resource:
                          kind: secret
                          version: v1
                        children:
                          - path: key
                            enum: $keys($secret.data)
                  - name: Cert
                    path: cert
                    widget: FormGroup
                    children:
                      - name: Value
                        path: value
                        widget: Text
                      - name: Secret Reference
                        path: valueFrom.secretKeyRef
                        widget: ResourceRef
                        resource:
                          kind: secret
                          version: v1
                        children:
                          - path: key
                            enum: $keys($secret.data)
                  - name: Key
                    path: key
                    widget: FormGroup
                    children:
                      - name: Value
                        path: value
                        widget: Text
                      - name: Secret Reference
                        path: valueFrom.secretKeyRef
                        widget: ResourceRef
                        resource:
                          kind: secret
                          version: v1
                        children:
                          - path: key
                            enum: $keys($secret.data)
    general: |-
      resource:
        kind: LogPipeline
        group: telemetry.kyma-project.io
        version: v1alpha1
      name: Log Pipelines
      category: Telemetry
      urlPath: logpipelines
      scope: cluster
      description: >-
        {{[LogPipeline custom resource](https://kyma-project.io/#/telemetry-manager/user/resources/02-logpipeline)}} configures a custom Log Pipeline.
    list: |-
      - source: >-
           $each(spec.output, function($v, $k) { $exists($v) ? $k })
        type: string
        name: Type
        isSelected: true
        widget: Text
      - name: Supported-Mode
        source: $not(status.unsupportedMode)
        widget: Badge
        highlights:
          positive:
            - 'true'
          critical:
            - 'false'
      - name: Status
        source: status.conditions
        widget: Columns
        children:
          - name: Type
            source: type
            widget: Badge
          - name: Status
            source: status
            widget: Badge
            highlights:
              positive:
                - 'True'
              critical:
                - 'False'
    presets: |-
      - name: Default
        default: true
        value:
          spec:
            input:
              application:
                enabled: true
                keepOriginalBody: true
            output:
              otlp:
                protocol: 'grpc'
  metricpipeline:
    dataSources: |-
      relatedSecrets:
        resource:
          kind: Secret
          version: v1
        filter: |-
            $item.metadata.name =  $root.spec.output.otlp.authentication.basic.user.valueFrom.secretKeyRef.name or
            $item.metadata.name =  $root.spec.output.otlp.authentication.basic.password.valueFrom.secretKeyRef.name or
            $item.metadata.name = $root.spec.output.otlp.endpoint.valueFrom.secretKeyRef.name or
            $item.metadata.name = $root.spec.output.otlp.headers.valueFrom.secretKeyRef.name or
            $item.metadata.name = $root.spec.output.otlp.tls.ca.valueFrom.secretKeyRef.name or
            $item.metadata.name = $root.spec.output.otlp.tls.cert.valueFrom.secretKeyRef.name or
            $item.metadata.name = $root.spec.output.otlp.tls.key.valueFrom.secretKeyRef.name
    details: |-
      header:
        - source: >-
            $each(spec.output, function($v, $k) {$v.endpoint.value or
            $v.endpoint.valueFrom.secretKeyRef.name ? $k})
          placeholder: custom
          type: string
          name: Type
          isSelected: true
          widget: Text
      status:
        body:
          - name: Condition details
            widget: ConditionList
            source: status.conditions
            highlights:
              - type: GatewayHealthy
                positive:
                  - 'True'
                critical:
                  - 'False'
                warning:
                  - 'Unknown'
              - type: AgentHealthy
                positive:
                  - 'True'
                critical:
                  - 'False'
                warning:
                  - 'Unknown'
              - type: ConfigurationGenerated
                positive:
                  - 'True'
                critical:
                  - 'False'
                warning:
                  - 'Unknown'
              - type: TelemetryFlowHealthy
                positive:
                  - 'True'
                critical:
                  - 'False'
                warning:
                  - 'Unknown'
            customContent:
              - value:
                  widget: Badge
                  source: $filter(status.conditions, function($c){$c.type = 'GatewayHealthy'}).reason
                header: Reason
                type: GatewayHealthy
              - value: $readableTimestamp($filter(status.conditions, function($c){$c.type = 'GatewayHealthy'}).lastTransitionTime)
                header: Last transition time
                type: GatewayHealthy
              - value:
                  widget: Badge
                  source: $filter(status.conditions, function($c){$c.type = 'AgentHealthy'}).reason
                header: Reason
                type: AgentHealthy
              - value: $readableTimestamp($filter(status.conditions, function($c){$c.type = 'AgentHealthy'}).lastTransitionTime)
                header: Last transition time
                type: AgentHealthy
              - value:
                  widget: Badge
                  source: $filter(status.conditions, function($c){$c.type = 'ConfigurationGenerated'}).reason
                header: Reason
                type: ConfigurationGenerated
              - value: $readableTimestamp($filter(status.conditions, function($c){$c.type = 'ConfigurationGenerated'}).lastTransitionTime)
                header: Last transition time
                type: ConfigurationGenerated
              - value:
                  widget: Badge
                  source: $filter(status.conditions, function($c){$c.type = 'TelemetryFlowHealthy'}).reason
                header: Reason
                type: TelemetryFlowHealthy
              - value: $readableTimestamp($filter(status.conditions, function($c){$c.type = 'TelemetryFlowHealthy'}).lastTransitionTime)
                header: Last transition time
                type: TelemetryFlowHealthy
      body:
        - widget: Panel
          name: Input
          children:
            - name: Prometheus
              widget: Panel
              visibility: $exists(spec.input.prometheus)
              children:
                - name: Enabled
                  visibility: $exists(spec.input.prometheus.enabled)
                  source: spec.input.prometheus.enabled
                - name: Include Namespaces
                  widget: JoinedArray
                  visibility: $exists(spec.input.prometheus.namespaces.include)
                  source: spec.input.prometheus.namespaces.include
                  separator: ', '
                - name: Exclude Namespaces
                  widget: JoinedArray
                  visibility: $exists(spec.input.prometheus.namespaces.exclude)
                  source: spec.input.prometheus.namespaces.exclude
                  separator: ', '
                - name: Diagnostic Metrics
                  visibility: $exists(spec.input.prometheus.diagnosticMetrics.enabled)
                  source: spec.input.prometheus.diagnosticMetrics.enabled
            - name: Istio
              widget: Panel
              visibility: $exists(spec.input.istio)
              children:
                - name: Enabled
                  visibility: $exists(spec.input.istio.enabled)
                  source: spec.input.istio.enabled
                - name: Include Namespaces
                  widget: JoinedArray
                  visibility: $exists(spec.input.istio.namespaces.include)
                  source: spec.input.istio.namespaces.include
                  separator: ', '
                - name: Exclude Namespaces
                  widget: JoinedArray
                  visibility: $exists(spec.input.istio.namespaces.exclude)
                  source: spec.input.istio.namespaces.exclude
                  separator: ', '
                - name: Diagnostic Metrics
                  visibility: $exists(spec.input.istio.diagnosticMetrics.enabled)
                  source: spec.input.istio.diagnosticMetrics.enabled
                - name: Envoy Metrics
                  visibility: $exists(spec.input.istio.envoyMetrics.enabled)
                  source: spec.input.istio.envoyMetrics.enabled
            - name: Runtime
              widget: Panel
              visibility: $exists(spec.input.runtime)
              children:
                - name: Enabled
                  visibility: $exists(spec.input.runtime.enabled)
                  source: spec.input.runtime.enabled
                - name: Include Namespaces
                  widget: JoinedArray
                  visibility: $exists(spec.input.runtime.namespaces.include)
                  source: spec.input.runtime.namespaces.include
                  separator: ', '
                - name: Exclude Namespaces
                  widget: JoinedArray
                  visibility: $exists(spec.input.runtime.namespaces.exclude)
                  source: spec.input.runtime.namespaces.exclude
                  separator: ', '
                - name: Resources
                  widget: Panel
                  visibility: $exists(spec.input.runtime.resources)
                  children:
                    - name: Pod
                      visibility: $exists(spec.input.runtime.resources.pod)
                      source: spec.input.runtime.resources.pod.enabled
                    - name: Container
                      visibility: $exists(spec.input.runtime.resources.container)
                      source: spec.input.runtime.resources.container.enabled
                    - name: Node
                      visibility: $exists(spec.input.runtime.resources.node)
                      source: spec.input.runtime.resources.node.enabled
                    - name: Volume
                      visibility: $exists(spec.input.runtime.resources.volume)
                      source: spec.input.runtime.resources.volume.enabled
                    - name: DaemonSet
                      visibility: $exists(spec.input.runtime.resources.daemonset)
                      source: spec.input.runtime.resources.daemonset.enabled
                    - name: Deployment
                      visibility: $exists(spec.input.runtime.resources.deployment)
                      source: spec.input.runtime.resources.deployment.enabled
                    - name: StatefulSet
                      visibility: $exists(spec.input.runtime.resources.statefulset)
                      source: spec.input.runtime.resources.statefulset.enabled
                    - name: Job
                      visibility: $exists(spec.input.runtime.resources.job)
                      source: spec.input.runtime.resources.job.enabled
            - name: OTLP
              widget: Panel
              visibility: $exists(spec.input.otlp)
              children:
                - name: Disabled
                  visibility: $exists(spec.input.otlp.disabled)
                  source: spec.input.otlp.disabled
                - name: Include Namespaces
                  widget: JoinedArray
                  visibility: $exists(spec.input.otlp.namespaces.include)
                  source: spec.input.otlp.namespaces.include
                  separator: ', '
                - name: Exclude Namespaces
                  widget: JoinedArray
                  visibility: $exists(spec.input.otlp.namespaces.exclude)
                  source: spec.input.otlp.namespaces.exclude
                  separator: ', '
        - widget: Panel
          name: Output
          children:
            - name: OTLP
              widget: Panel
              visibility: $exists(spec.output.otlp)
              children:
                - name: Endpoint
                  widget: Panel
                  visibility: $exists(spec.output.otlp.endpoint)
                  children:
                    - name: Value
                      source: spec.output.otlp.endpoint.value
                      visibility: $exists(spec.output.otlp.endpoint.value)
                    - name: Value From Secret
                      widget: ResourceRefs
                      source: spec.output.otlp.endpoint.valueFrom.secretKeyRef
                      kind: Secret
                      visibility: $exists(spec.output.otlp.endpoint.valueFrom.secretKeyRef.name)
                - name: Authentication
                  widget: Panel
                  visibility: $exists(spec.output.otlp.authentication)
                  children:
                    - name: User
                      widget: Panel
                      visibility: $exists(spec.output.otlp.authentication.basic.user)
                      children:
                        - name: Value
                          source: spec.output.otlp.authentication.basic.user.value
                          visibility: $exists(spec.output.otlp.authentication.basic.user.value)
                        - name: Value From Secret
                          widget: ResourceRefs
                          source: >-
                            spec.output.otlp.authentication.basic.user.valueFrom.secretKeyRef
                          kind: Secret
                          visibility: >-
                            $exists(spec.output.otlp.authentication.basic.user.valueFrom.secretKeyRef.name)
                    - name: Password
                      widget: Panel
                      visibility: $exists(spec.output.otlp.authentication.basic.password)
                      children:
                        - name: Value
                          source: spec.output.otlp.authentication.basic.password.value
                          visibility: >-
                            $exists(spec.output.otlp.authentication.basic.password.value)
                        - name: Value From Secret
                          widget: ResourceRefs
                          source: >-
                            spec.output.otlp.authentication.basic.password.valueFrom.secretKeyRef
                          kind: Secret
                          visibility: >-
                            $exists(spec.output.otlp.authentication.basic.password.valueFrom.secretKeyRef.name)
                - name: Headers
                  widget: Panel
                  visibility: $exists(spec.output.otlp.headers)
                  children:
                    - name: Header
                      widget: Panel
                      visibility: $exists(spec.output.otlp.headers[].name)
                      source: spec.output.otlp.headers[]
                      children:
                        - name: Name
                          source: name
                          visibility: $exists(name)
                        - name: Prefix
                          source: prefix
                          visibility: $exists(prefix)
                        - name: Value
                          source: value
                          visibility: $exists(value)
                        - name: Value From Secret
                          widget: ResourceRefs
                          source: valueFrom.secretKeyRef
                          kind: Secret
                          visibility: $exists(valueFrom.secretKeyRef.name)
                - name: TLS
                  widget: Panel
                  visibility: $exists(spec.output.otlp.tls)
                  children:
                    - name: Insecure
                      visibility: $exists(spec.output.otlp.tls.insecure)
                      source: spec.output.otlp.tls.insecure
                    - name: Skip Cert Verification
                      visibility: $exists(spec.output.otlp.tls.insecureSkipVerify)
                      source: spec.output.otlp.tls.insecureSkipVerify
                    - name: Ca
                      widget: Panel
                      visibility: $exists(spec.output.otlp.tls.ca)
                      source: spec.output.otlp.tls.ca
                      children:
                        - name: Value
                          source: value
                          visibility: $exists(value)
                        - name: Value From Secret
                          widget: ResourceRefs
                          source: valueFrom.secretKeyRef
                          kind: Secret
                          visibility: $exists(valueFrom.secretKeyRef.name)
                    - name: Cert
                      widget: Panel
                      visibility: $exists(spec.output.otlp.tls.cert)
                      source: spec.output.otlp.tls.cert
                      children:
                        - name: Value
                          source: value
                          visibility: $exists(value)
                        - name: Value From Secret
                          widget: ResourceRefs
                          source: valueFrom.secretKeyRef
                          kind: Secret
                          visibility: $exists(valueFrom.secretKeyRef.name)
                    - name: Key
                      widget: Panel
                      visibility: $exists(spec.output.otlp.tls.key)
                      source: spec.output.otlp.tls.key
                      children:
                        - name: Value
                          source: value
                          visibility: $exists(value)
                        - name: Value From Secret
                          widget: ResourceRefs
                          source: valueFrom.secretKeyRef
                          kind: Secret
                          visibility: $exists(valueFrom.secretKeyRef.name)
                - widget: Panel
                  name: Other Settings
                  children:
                    - name: Protocol
                      source: spec.output.otlp.protocol
      resourceGraph:
        colorVariant: 2
        dataSources:
          - source: relatedSecrets
    form: |-
      - path: spec.input
        widget: FormGroup
        defaultExpanded: true
        simple: true
        children:
          - name: Prometheus
            path: prometheus
            widget: FormGroup
            simple: true
            children:
              - name: Enabled
                path: enabled
                simple: true
              - name: Include Namespaces
                widget: SimpleList
                path: namespaces.include
                defaultExpanded: true
                children:
                  - path: '[]'
              - name: Exclude Namespaces
                widget: SimpleList
                path: namespaces.exclude
                defaultExpanded: true
                children:
                  - path: '[]'
              - name: Enable Diagnostic Metrics
                path: diagnosticMetrics.enabled
                simple: true
          - name: Istio
            path: istio
            widget: FormGroup
            simple: true
            children:
              - name: Enabled
                path: enabled
                simple: true
              - name: Include Namespaces
                widget: SimpleList
                path: namespaces.include
                defaultExpanded: true
                children:
                  - path: '[]'
              - name: Exclude Namespaces
                widget: SimpleList
                path: namespaces.exclude
                defaultExpanded: true
                children:
                  - path: '[]'
              - name: Enable Diagnostic Metrics
                path: diagnosticMetrics.enabled
                simple: true
              - name: Enable Envoy Metrics
                path: envoyMetrics.enabled
                simple: true
          - name: Runtime
            path: runtime
            widget: FormGroup
            simple: true
            children:
              - name: Enabled
                path: enabled
                simple: true
              - name: Include Namespaces
                widget: SimpleList
                path: namespaces.include
                defaultExpanded: true
                children:
                  - path: '[]'
              - name: Exclude Namespaces
                widget: SimpleList
                path: namespaces.exclude
                defaultExpanded: true
                children:
                  - path: '[]'
              - name: Resources
                path: resources
                widget: FormGroup
                simple: true
                children:
                - name: Enable Pod Metrics
                  path: pod.enabled
                  simple: true
                - name: Enable Container Metrics
                  path: container.enabled
                  simple: true
                - name: Enable Node Metrics
                  path: node.enabled
                  simple: true
                - name: Enable Volume Metrics
                  path: volume.enabled
                  simple: true
                - name: Enable DaemonSet Metrics
                  path: daemonset.enabled
                  simple: true
                - name: Enable Deployment Metrics
                  path: deployment.enabled
                  simple: true
                - name: Enable StatefulSet Metrics
                  path: statefulset.enabled
                  simple: true
                - name: Enable Job Metrics
                  path: job.enabled
                  simple: true
          - name: OTLP
            path: otlp
            widget: FormGroup
            simple: true
            children:
              - name: Disabled
                path: disabled
                simple: true
              - name: Include Namespaces
                widget: SimpleList
                path: namespaces.include
                defaultExpanded: true
                children:
                  - path: '[]'
              - name: Exclude Namespaces
                widget: SimpleList
                path: namespaces.exclude
                defaultExpanded: true
                children:
                  - path: '[]'
      - path: spec.output
        widget: FormGroup
        defaultExpanded: true
        simple: true
        children:
          - name: OTLP
            path: otlp
            widget: FormGroup
            defaultExpanded: true
            simple: true
            children:
              - name: Endpoint
                path: endpoint
                widget: FormGroup
                simple: true
                children:
                  - name: Value
                    path: value
                    widget: Text
                    simple: true
                  - name: Secret Reference
                    path: valueFrom.secretKeyRef
                    widget: ResourceRef
                    simple: true
                    resource:
                      kind: secret
                      version: v1
                    children:
                      - simple: true
                        path: key
                        enum: $keys($secret.data)
              - name: Protocol
                path: protocol
                simple: true
                widget: FormGroup
                children:
                  - name: Value
                    widget: Text
              - name: Authentication
                path: authentication
                widget: FormGroup
                simple: true
                children:
                  - name: User
                    path: basic.user
                    widget: FormGroup
                    simple: true
                    children:
                      - name: Value
                        path: value
                        widget: Text
                        simple: true
                      - name: Secret Reference
                        path: valueFrom.secretKeyRef
                        widget: ResourceRef
                        resource:
                          kind: secret
                          version: v1
                        simple: true
                        children:
                          - simple: true
                            path: key
                            enum: $keys($secret.data)
                  - name: Password
                    path: basic.password
                    widget: FormGroup
                    simple: true
                    children:
                      - name: Value
                        path: value
                        widget: Text
                        simple: true
                      - name: Secret Reference
                        path: valueFrom.secretKeyRef
                        widget: ResourceRef
                        resource:
                          kind: secret
                          version: v1
                        simple: true
                        children:
                          - simple: true
                            path: key
                            enum: $keys($secret.data)
              - name: Headers
                path: headers[]
                widget: FormGroup
                simple: true
                children:
                  - name: Name
                    path: name
                    widget: Text
                    simple: true
                  - name: Prefix
                    path: prefix
                    widget: Text
                    simple: true
                  - name: Value
                    path: value
                    widget: Text
                    simple: true
                  - name: Secret Reference
                    path: valueFrom.secretKeyRef
                    widget: ResourceRef
                    simple: true
                    resource:
                      kind: secret
                      version: v1
                    children:
                      - simple: true
                        path: key
                        enum: $keys($secret.data)
              - name: TLS
                widget: FormGroup
                path: tls
                children:
                  - name: Insecure
                    path: insecure
                  - name: Skip Certificate Validation
                    path: insecureSkipVerify
                  - name: CA
                    path: ca
                    widget: FormGroup
                    simple: true
                    children:
                      - name: Value
                        path: value
                        widget: Text
                        simple: true
                      - name: Secret Reference
                        path: valueFrom.secretKeyRef
                        widget: ResourceRef
                        simple: true
                        resource:
                          kind: secret
                          version: v1
                        children:
                          - simple: true
                            path: key
                            enum: $keys($secret.data)
                  - name: Cert
                    path: cert
                    widget: FormGroup
                    simple: true
                    children:
                      - name: Value
                        path: value
                        widget: Text
                        simple: true
                      - name: Secret Reference
                        path: valueFrom.secretKeyRef
                        widget: ResourceRef
                        simple: true
                        resource:
                          kind: secret
                          version: v1
                        children:
                          - simple: true
                            path: key
                            enum: $keys($secret.data)
                  - name: Key
                    path: key
                    widget: FormGroup
                    simple: true
                    children:
                      - name: Value
                        path: value
                        widget: Text
                        simple: true
                      - name: Secret Reference
                        path: valueFrom.secretKeyRef
                        widget: ResourceRef
                        simple: true
                        resource:
                          kind: secret
                          version: v1
                        children:
                          - simple: true
                            path: key
                            enum: $keys($secret.data)
    general: |-
      resource:
        kind: MetricPipeline
        group: telemetry.kyma-project.io
        version: v1alpha1
      name: Metric Pipelines
      category: Telemetry
      urlPath: metricpipelines
      scope: cluster
      description: >-
        {{[MetricPipeline custom resource](https://kyma-project.io/#/telemetry-manager/user/resources/05-metricpipeline)}} configures a custom Metric Pipeline.
    list: |-
      - source: >-
          $each(spec.output, function($v, $k) {$v.endpoint.value or
          $v.endpoint.valueFrom.secretKeyRef.name ? $k})
        placeholder: custom
        type: string
        name: Type
        isSelected: true
        widget: Text
      - name: Status
        source: status.conditions
        widget: Columns
        children:
          - name: Type
            source: type
            widget: Badge
          - name: Status
            source: status
            widget: Badge
            highlights:
              positive:
                - 'True'
              critical:
                - 'False'
    presets: |-
      - name: Default
        default: true
        value:
          spec:
            output:
              otlp:
                protocol: 'grpc'
  tracepipeline:
    dataSources: |-
      relatedSecrets:
        resource:
          kind: Secret
          version: v1
        filter: |-
            $item.metadata.name =  $root.spec.output.otlp.authentication.basic.user.valueFrom.secretKeyRef.name or
            $item.metadata.name =  $root.spec.output.otlp.authentication.basic.password.valueFrom.secretKeyRef.name or
            $item.metadata.name = $root.spec.output.otlp.endpoint.valueFrom.secretKeyRef.name or
            $item.metadata.name = $root.spec.output.otlp.headers.valueFrom.secretKeyRef.name or
            $item.metadata.name = $root.spec.output.otlp.tls.ca.valueFrom.secretKeyRef.name or
            $item.metadata.name = $root.spec.output.otlp.tls.cert.valueFrom.secretKeyRef.name or
            $item.metadata.name = $root.spec.output.otlp.tls.key.valueFrom.secretKeyRef.name
    details: |-
      header:
        - source: >-
            $each(spec.output, function($v, $k) {$v.endpoint.value or
            $v.endpoint.valueFrom.secretKeyRef.name ? $k})
          placeholder: custom
          type: string
          name: Type
          isSelected: true
          widget: Text
      status:
        body:
          - name: Condition details
            widget: ConditionList
            source: status.conditions
            highlights:
              - type: GatewayHealthy
                positive:
                  - 'True'
                critical:
                  - 'False'
                warning:
                  - 'Unknown'
              - type: ConfigurationGenerated
                positive:
                  - 'True'
                critical:
                  - 'False'
                warning:
                  - 'Unknown'
              - type: TelemetryFlowHealthy
                positive:
                  - 'True'
                critical:
                  - 'False'
                warning:
                  - 'Unknown'
            customContent:
              - value:
                  widget: Badge
                  source: $filter(status.conditions, function($c){$c.type = 'GatewayHealthy'}).reason
                header: Reason
                type: GatewayHealthy
              - value: $readableTimestamp($filter(status.conditions, function($c){$c.type = 'GatewayHealthy'}).lastTransitionTime)
                header: Last transition time
                type: GatewayHealthy
              - value:
                  widget: Badge
                  source: $filter(status.conditions, function($c){$c.type = 'ConfigurationGenerated'}).reason
                header: Reason
                type: ConfigurationGenerated
              - value: $readableTimestamp($filter(status.conditions, function($c){$c.type = 'ConfigurationGenerated'}).lastTransitionTime)
                header: Last transition time
                type: ConfigurationGenerated
              - value:
                  widget: Badge
                  source: $filter(status.conditions, function($c){$c.type = 'TelemetryFlowHealthy'}).reason
                header: Reason
                type: TelemetryFlowHealthy
              - value: $readableTimestamp($filter(status.conditions, function($c){$c.type = 'TelemetryFlowHealthy'}).lastTransitionTime)
                header: Last transition time
                type: TelemetryFlowHealthy
      body:
        - widget: Panel
          name: Output
          children:
            - name: OTLP
              widget: Panel
              visibility: $exists(spec.output.otlp)
              children:
                - name: Endpoint
                  widget: Panel
                  visibility: $exists(spec.output.otlp.endpoint)
                  children:
                    - name: Value
                      source: spec.output.otlp.endpoint.value
                      visibility: $exists(spec.output.otlp.endpoint.value)
                    - name: Value From Secret
                      widget: ResourceRefs
                      source: spec.output.otlp.endpoint.valueFrom.secretKeyRef
                      kind: Secret
                      visibility: $exists(spec.output.otlp.endpoint.valueFrom.secretKeyRef.name)
                - name: Authentication
                  widget: Panel
                  visibility: $exists(spec.output.otlp.authentication)
                  children:
                    - name: User
                      widget: Panel
                      visibility: $exists(spec.output.otlp.authentication.basic.user)
                      children:
                        - name: Value
                          source: spec.output.otlp.authentication.basic.user.value
                          visibility: $exists(spec.output.otlp.authentication.basic.user.value)
                        - name: Value From Secret
                          widget: ResourceRefs
                          source: >-
                            spec.output.otlp.authentication.basic.user.valueFrom.secretKeyRef
                          kind: Secret
                          visibility: >-
                            $exists(spec.output.otlp.authentication.basic.user.valueFrom.secretKeyRef.name)
                    - name: Password
                      widget: Panel
                      visibility: $exists(spec.output.otlp.authentication.basic.password)
                      children:
                        - name: Value
                          source: spec.output.otlp.authentication.basic.password.value
                          visibility: >-
                            $exists(spec.output.otlp.authentication.basic.password.value)
                        - name: Value From Secret
                          widget: ResourceRefs
                          source: >-
                            spec.output.otlp.authentication.basic.password.valueFrom.secretKeyRef
                          kind: Secret
                          visibility: >-
                            $exists(spec.output.otlp.authentication.basic.password.valueFrom.secretKeyRef.name)
                - name: Headers
                  widget: Panel
                  visibility: $exists(spec.output.otlp.headers)
                  children:
                    - name: Header
                      widget: Panel
                      visibility: $exists(spec.output.otlp.headers[].name)
                      source: spec.output.otlp.headers[]
                      children:
                        - name: Name
                          source: name
                          visibility: $exists(name)
                        - name: Prefix
                          source: prefix
                          visibility: $exists(prefix)
                        - name: Value
                          source: value
                          visibility: $exists(value)
                        - name: Value From Secret
                          widget: ResourceRefs
                          source: valueFrom.secretKeyRef
                          kind: Secret
                          visibility: $exists(valueFrom.secretKeyRef.name)
                - name: TLS
                  widget: Panel
                  visibility: $exists(spec.output.otlp.tls)
                  children:
                    - name: Insecure
                      visibility: $exists(spec.output.otlp.tls.insecure)
                      source: spec.output.otlp.tls.insecure
                    - name: Skip Cert Verification
                      visibility: $exists(spec.output.otlp.tls.insecureSkipVerify)
                      source: spec.output.otlp.tls.insecureSkipVerify
                    - name: Ca
                      widget: Panel
                      visibility: $exists(spec.output.otlp.tls.ca)
                      source: spec.output.otlp.tls.ca
                      children:
                        - name: Value
                          source: value
                          visibility: $exists(value)
                        - name: Value From Secret
                          widget: ResourceRefs
                          source: valueFrom.secretKeyRef
                          kind: Secret
                          visibility: $exists(valueFrom.secretKeyRef.name)
                    - name: Cert
                      widget: Panel
                      visibility: $exists(spec.output.otlp.tls.cert)
                      source: spec.output.otlp.tls.cert
                      children:
                        - name: Value
                          source: value
                          visibility: $exists(value)
                        - name: Value From Secret
                          widget: ResourceRefs
                          source: valueFrom.secretKeyRef
                          kind: Secret
                          visibility: $exists(valueFrom.secretKeyRef.name)
                    - name: Key
                      widget: Panel
                      visibility: $exists(spec.output.otlp.tls.key)
                      source: spec.output.otlp.tls.key
                      children:
                        - name: Value
                          source: value
                          visibility: $exists(value)
                        - name: Value From Secret
                          widget: ResourceRefs
                          source: valueFrom.secretKeyRef
                          kind: Secret
                          visibility: $exists(valueFrom.secretKeyRef.name)
                - widget: Panel
                  name: Other Settings
                  children:
                    - name: Protocol
                      source: spec.output.otlp.protocol
      resourceGraph:
        colorVariant: 2
        dataSources:
          - source: relatedSecrets
    form: |-
      - path: spec.output
        widget: FormGroup
        defaultExpanded: true
        simple: true
        children:
          - name: OTLP
            path: otlp
            widget: FormGroup
            defaultExpanded: true
            simple: true
            children:
              - name: Endpoint
                path: endpoint
                widget: FormGroup
                simple: true
                children:
                  - name: Value
                    path: value
                    widget: Text
                    simple: true
                  - name: Secret Reference
                    path: valueFrom.secretKeyRef
                    widget: ResourceRef
                    simple: true
                    resource:
                      kind: secret
                      version: v1
                    children:
                      - simple: true
                        path: key
                        enum: $keys($secret.data)
              - name: Protocol
                path: protocol
                simple: true
                widget: FormGroup
                children:
                  - name: Value
                    widget: Text
              - name: Authentication
                path: authentication
                widget: FormGroup
                simple: true
                children:
                  - name: User
                    path: basic.user
                    widget: FormGroup
                    simple: true
                    children:
                      - name: Value
                        path: value
                        widget: Text
                        simple: true
                      - name: Secret Reference
                        path: valueFrom.secretKeyRef
                        widget: ResourceRef
                        resource:
                          kind: secret
                          version: v1
                        simple: true
                        children:
                          - simple: true
                            path: key
                            enum: $keys($secret.data)
                  - name: Password
                    path: basic.password
                    widget: FormGroup
                    simple: true
                    children:
                      - name: Value
                        path: value
                        widget: Text
                        simple: true
                      - name: Secret Reference
                        path: valueFrom.secretKeyRef
                        widget: ResourceRef
                        resource:
                          kind: secret
                          version: v1
                        simple: true
                        children:
                          - simple: true
                            path: key
                            enum: $keys($secret.data)
              - name: Headers
                path: headers[]
                widget: FormGroup
                simple: true
                children:
                  - name: Name
                    path: name
                    widget: Text
                    simple: true
                  - name: Prefix
                    path: prefix
                    widget: Text
                    simple: true
                  - name: Value
                    path: value
                    widget: Text
                    simple: true
                  - name: Secret Reference
                    path: valueFrom.secretKeyRef
                    widget: ResourceRef
                    simple: true
                    resource:
                      kind: secret
                      version: v1
                    children:
                      - simple: true
                        path: key
                        enum: $keys($secret.data)
              - name: TLS
                widget: FormGroup
                path: tls
                children:
                  - name: Insecure
                    path: insecure
                  - name: Skip Certificate Validation
                    path: insecureSkipVerify
                  - name: CA
                    path: ca
                    widget: FormGroup
                    simple: true
                    children:
                      - name: Value
                        path: value
                        widget: Text
                        simple: true
                      - name: Secret Reference
                        path: valueFrom.secretKeyRef
                        widget: ResourceRef
                        simple: true
                        resource:
                          kind: secret
                          version: v1
                        children:
                          - simple: true
                            path: key
                            enum: $keys($secret.data)
                  - name: Cert
                    path: cert
                    widget: FormGroup
                    simple: true
                    children:
                      - name: Value
                        path: value
                        widget: Text
                        simple: true
                      - name: Secret Reference
                        path: valueFrom.secretKeyRef
                        widget: ResourceRef
                        simple: true
                        resource:
                          kind: secret
                          version: v1
                        children:
                          - simple: true
                            path: key
                            enum: $keys($secret.data)
                  - name: Key
                    path: key
                    widget: FormGroup
                    simple: true
                    children:
                      - name: Value
                        path: value
                        widget: Text
                        simple: true
                      - name: Secret Reference
                        path: valueFrom.secretKeyRef
                        widget: ResourceRef
                        simple: true
                        resource:
                          kind: secret
                          version: v1
                        children:
                          - simple: true
                            path: key
                            enum: $keys($secret.data)
    general: |-
      resource:
        kind: TracePipeline
        group: telemetry.kyma-project.io
        version: v1alpha1
      name: Trace Pipelines
      category: Telemetry
      urlPath: tracepipelines
      scope: cluster
      description: >-
        {{[TracePipeline custom resource](https://kyma-project.io/#/telemetry-manager/user/resources/04-tracepipeline)}} configures a custom Trace Pipeline.
    list: |-
      - source: >-
          $each(spec.output, function($v, $k) {$v.endpoint.value or
          $v.endpoint.valueFrom.secretKeyRef.name ? $k})
        placeholder: custom
        type: string
        name: Type
        isSelected: true
        widget: Text
      - name: Status
        source: status.conditions
        widget: Columns
        children:
          - name: Type
            source: type
            widget: Badge
          - name: Status
            source: status
            widget: Badge
            highlights:
              positive:
                - 'True'
              critical:
                - 'False'
    presets: |-
      - name: Default
        default: true
        value:
          spec:
            output:
              otlp:
                protocol: 'grpc'

  telemetry:
    dataSources: |-
      logPipelines:
        resource:
          group: telemetry.kyma-project.io
          version: v1alpha1
          kind: LogPipeline
      metricPipelines:
        resource:
          group: telemetry.kyma-project.io
          version: v1alpha1
          kind: MetricPipeline
      tracePipelines:
        resource:
          group: telemetry.kyma-project.io
          version: v1alpha1
          kind: TracePipeline
    details: |-
      header:
        - name: State
          source: status.state
          widget: Badge
      status:
        body:
          - name: OTLP Endpoints
            widget: Panel
            source: status.endpoints
            fullWidth: true
            children:
              - name: Traces GRPC
                source: traces.grpc
              - name: Traces HTTP
                source: traces.http
              - name: Metrics GRPC
                source: metrics.grpc
              - name: Metrics HTTP
                source: metrics.http
          - name: Condition details
            widget: ConditionList
            source: status.conditions
            highlights:
              - type: LogComponentsHealthy
                positive:
                  - 'True'
                critical:
                  - 'False'
                warning:
                  - 'Unknown'
              - type: MetricComponentsHealthy
                positive:
                  - 'True'
                critical:
                  - 'False'
                warning:
                  - 'Unknown'
              - type: TraceComponentsHealthy
                positive:
                  - 'True'
                critical:
                  - 'False'
                warning:
                  - 'Unknown'
            customContent:
              - value:
                  widget: Badge
                  source: $filter(status.conditions, function($c){$c.type = 'LogComponentsHealthy'}).reason
                header: Reason
                type: LogComponentsHealthy
              - value: $readableTimestamp($filter(status.conditions, function($c){$c.type = 'LogComponentsHealthy'}).lastTransitionTime)
                header: Last transition time
                type: LogComponentsHealthy
              - value:
                  widget: Badge
                  source: $filter(status.conditions, function($c){$c.type = 'MetricComponentsHealthy'}).reason
                header: Reason
                type: MetricComponentsHealthy
              - value: $readableTimestamp($filter(status.conditions, function($c){$c.type = 'MetricComponentsHealthy'}).lastTransitionTime)
                header: Last transition time
                type: MetricComponentsHealthy
              - value:
                  widget: Badge
                  source: $filter(status.conditions, function($c){$c.type = 'TraceComponentsHealthy'}).reason
                header: Reason
                type: TraceComponentsHealthy
              - value: $readableTimestamp($filter(status.conditions, function($c){$c.type = 'TraceComponentsHealthy'}).lastTransitionTime)
                header: Last transition time
                type: TraceComponentsHealthy
      body:
        - name: Logs
          widget: Panel
          visibility: $exists(spec.log.gateway.scaling.static.replicas)
          children:
          - name: Gateway Replicas
            source: spec.log.gateway.scaling.static.replicas
          - name: Scaling Type
            source: spec.log.gateway.scaling.type
        - name: Traces
          widget: Panel
          visibility: $exists(spec.trace.gateway.scaling.static.replicas)
          children:
          - name: Gateway Replicas
            source: spec.trace.gateway.scaling.static.replicas
          - name: Scaling Type
            source: spec.trace.gateway.scaling.type
        - name: Metrics
          widget: Panel
          visibility: $exists(spec.metric.gateway.scaling.static.replicas)
          children:
          - name: Gateway Replicas
            source: spec.metric.gateway.scaling.static.replicas
          - name: Scaling Type
            source: spec.metric.gateway.scaling.type
      resourceGraph:
        colorVariant: 2
        dataSources:
          - source: logPipelines
          - source: metricPipelines
          - source: tracePipelines
    form: |-
      - advanced: true
        defaultExpanded: false
        readOnly: false
        decodable: false
        path: spec.log
        name: Logs
        widget: FormGroup
        children:
          - advanced: true
            defaultExpanded: false
            readOnly: false
            decodable: false
            path: gateway
            name: Gateway
            widget: FormGroup
            children:
              - advanced: true
                defaultExpanded: false
                readOnly: false
                decodable: false
                path: scaling
                name: Scaling
                widget: FormGroup
                children:
                  - path: type
                    override: false
                    enum:
                      - None
                  - advanced: true
                    defaultExpanded: false
                    readOnly: false
                    decodable: false
                    visibility: "$item.spec.log.gateway.scaling.type = 'Static'"
                    path: static
                    name: Static
                    widget: FormGroup
                    children:
                      - advanced: true
                        defaultExpanded: false
                        readOnly: false
                        decodable: false
                        path: replicas
                        name: Replicas
                        simple: false
                        widget: Number
      - advanced: true
        defaultExpanded: false
        readOnly: false
        decodable: false
        path: spec.trace
        name: Traces
        widget: FormGroup
        children:
          - advanced: true
            defaultExpanded: false
            readOnly: false
            decodable: false
            path: gateway
            name: Gateway
            widget: FormGroup
            children:
              - advanced: true
                defaultExpanded: false
                readOnly: false
                decodable: false
                path: scaling
                name: Scaling
                widget: FormGroup
                children:
                  - path: type
                    override: false
                    enum:
                      - None
                  - advanced: true
                    defaultExpanded: false
                    readOnly: false
                    decodable: false
                    visibility: "$item.spec.trace.gateway.scaling.type = 'Static'"
                    path: static
                    name: Static
                    widget: FormGroup
                    children:
                      - advanced: true
                        defaultExpanded: false
                        readOnly: false
                        decodable: false
                        path: replicas
                        name: Replicas
                        simple: false
                        widget: Number
      - advanced: true
        defaultExpanded: false
        readOnly: false
        decodable: false
        path: spec.metric
        name: Metrics
        widget: FormGroup
        children:
          - advanced: true
            defaultExpanded: false
            readOnly: false
            decodable: false
            path: gateway
            name: Gateway
            widget: FormGroup
            children:
              - advanced: true
                defaultExpanded: false
                readOnly: false
                decodable: false
                path: scaling
                name: Scaling
                widget: FormGroup
                children:
                  - path: type
                    override: false
                    enum:
                      - None
                  - advanced: true
                    defaultExpanded: false
                    readOnly: false
                    decodable: false
                    visibility: "$item.spec.metric.gateway.scaling.type = 'Static'"
                    path: static
                    name: Static
                    widget: FormGroup
                    children:
                      - advanced: true
                        defaultExpanded: false
                        readOnly: false
                        decodable: false
                        path: replicas
                        name: Replicas
                        simple: false
                        widget: Number
      - path: spec.enrichments
        name: Enrichments
        widget: FormGroup
        children:
          - name: Pod Labels
            widget: GenericList
            path: extractPodLabels
            children:
              - name: Key
                widget: Text
                path: '[].key'
              - name: Key Prefix
                widget: Text
                path: '[].keyPrefix'
    general: |-
      resource:
        kind: Telemetry
        group: operator.kyma-project.io
        version: v1alpha1
      name: Telemetry
      category: Kyma
      urlPath: telemetries
      scope: namespace
      description: >-
        {{[Telemetry custom resource](https://kyma-project.io/#/telemetry-manager/user/resources/01-telemetry)}} configures the Telemetry module.
      features:
        actions:
          disableCreate: true
          disableDelete: true
    list: |-
      - name: State
        source: status.state
        widget: Badge